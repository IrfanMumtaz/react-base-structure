{"ast":null,"code":"import _regeneratorRuntime from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/imirfanmumtaz/www/react/apex-react/src/views/access-control-list/create.js\";\nimport React, { Component, Fragment } from \"react\";\nimport config from \"../../app/config\";\nimport { store } from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport { Alert, Button, Card, CardBody, CardTitle, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { CheckSquare, FileText, Info, Mail, X, Map } from \"react-feather\";\nimport { Field, Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Select from 'react-select';\nimport \"react-select/dist/react-select\";\nvar formSchema = Yup.object().shape({\n  name: Yup.string().required(\"Required\").max(50, \"Role name is too long.\")\n});\n\nvar Create = /*#__PURE__*/function (_Component) {\n  _inherits(Create, _Component);\n\n  function Create() {\n    var _this;\n\n    _classCallCheck(this, Create);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Create).call(this));\n    _this.getPermissions = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var permissions, requestOptions;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              permissions = _this.state.permissions;\n              requestOptions = {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": \"Bearer \".concat(_this.state.auth.token)\n                }\n              };\n              fetch(\"\".concat(config.base_url, \"v1/acl/permission\"), requestOptions).then(_this.handleResponse).then(function (response) {\n                if (response.success === true) {\n                  var alert = {\n                    type: \"success\",\n                    message: response.message,\n                    display: true\n                  };\n                  var _permissions = response.data.permissions;\n                  var statePermission = [];\n\n                  _permissions.map(function (permission) {\n                    return statePermission.push({\n                      value: permission.id,\n                      label: permission.name\n                    });\n                  });\n\n                  _this.setState({\n                    permissions: statePermission\n                  });\n                }\n\n                return response;\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.createRole = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this$state, formValues, multivalues, requestOptions;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, formValues = _this$state.formValues, multivalues = _this$state.multivalues;\n              formValues.permissions = [];\n              multivalues.map(function (val) {\n                formValues.permissions.push(val.value);\n              });\n              requestOptions = {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": \"Bearer \".concat(_this.state.auth.token)\n                },\n                body: JSON.stringify(formValues)\n              };\n              fetch(\"\".concat(config.base_url, \"v1/acl/role\"), requestOptions).then(_this.handleResponse).then(function (response) {\n                if (response.success === true) {\n                  var alert = {\n                    type: \"success\",\n                    message: response.message,\n                    display: true\n                  };\n\n                  _this.setState({\n                    alert: alert\n                  });\n                } else {\n                  var _alert = {\n                    type: \"danger\",\n                    message: response.error.message,\n                    display: true\n                  };\n\n                  _this.setState({\n                    alert: _alert\n                  });\n                }\n\n                return response;\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.handleSubmit = function (e) {\n      _this.createRole();\n    };\n\n    _this.handleMultiChange = function (option) {\n      _this.setState({\n        multivalues: option\n      });\n    };\n\n    _this.handleResetForm = function () {\n      document.getElementById(\"vehicleForm\").reset();\n    };\n\n    _this.state = {\n      auth: store.getState().authentication.Auth,\n      formValues: {\n        name: '',\n        permissions: []\n      },\n      multivalues: [],\n      permissions: [],\n      alert: {\n        display: false,\n        type: \"success\",\n        message: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Create, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getPermissions();\n    }\n  }, {\n    key: \"handleResponse\",\n    value: function handleResponse(response) {\n      return response.text().then(function (text) {\n        return text && JSON.parse(text);\n      });\n    }\n  }, {\n    key: \"findPermission\",\n    value: function findPermission(id) {\n      var formValues = this.state.formValues;\n      var obj = formValues.permissions.find(function (p) {\n        return p.id === id;\n      });\n\n      if (obj) {\n        if (formValues.addPermission.indexOf(id === -1)) {\n          formValues.addPermission.push(id);\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          permissions = _this$state2.permissions,\n          formValues = _this$state2.formValues;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ContentHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, \"Vehicles Update \"), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Formik, {\n        initialValues: this.state.formValues,\n        enableReinitialize: true,\n        validationSchema: formSchema,\n        onSubmit: function onSubmit(data, _ref3) {\n          var setSubmitting = _ref3.setSubmitting;\n          setSubmitting(true);\n\n          _this2.setState({\n            formValues: data\n          });\n\n          _this2.handleSubmit();\n\n          setSubmitting(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 37\n        }\n      }, function (_ref4) {\n        var values = _ref4.values,\n            isSubmitting = _ref4.isSubmitting,\n            errors = _ref4.errors,\n            touched = _ref4.touched,\n            handleChange = _ref4.handleChange;\n        return /*#__PURE__*/React.createElement(Form, {\n          id: \"vehicleForm\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-body\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"form-section\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(Map, {\n          size: 20,\n          color: \"#212529\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 82\n          }\n        }), \" Role Info\"), /*#__PURE__*/React.createElement(Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: \"12\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: \"name\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 65\n          }\n        }, \"Role Name\"), /*#__PURE__*/React.createElement(Field, {\n          name: \"name\",\n          id: \"name\",\n          value: values.name,\n          className: \"form-control \".concat(errors.name && touched.name && 'is-invalid'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 65\n          }\n        }), errors.name && touched.name ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 96\n          }\n        }, errors.name) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: \"12\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(Select, {\n          options: permissions,\n          value: _this2.state.multivalues,\n          onChange: _this2.handleMultiChange,\n          isMulti: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 61\n          }\n        })))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-actions\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"primary\",\n          type: \"submit\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(CheckSquare, {\n          size: 16,\n          color: \"#FFF\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 57\n          }\n        }), \" Save\"), _this2.state.alert.display && /*#__PURE__*/React.createElement(Alert, {\n          color: _this2.state.alert.type,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 53\n          }\n        }, _this2.state.alert.message)));\n      })))))));\n    }\n  }]);\n\n  return Create;\n}(Component);\n\nexport default Create;","map":{"version":3,"sources":["/home/imirfanmumtaz/www/react/apex-react/src/views/access-control-list/create.js"],"names":["React","Component","Fragment","config","store","ContentHeader","Alert","Button","Card","CardBody","CardTitle","Col","FormGroup","Input","Label","Row","CheckSquare","FileText","Info","Mail","X","Map","Field","Formik","Form","Yup","Select","formSchema","object","shape","name","string","required","max","Create","getPermissions","permissions","state","requestOptions","method","headers","auth","token","fetch","base_url","then","handleResponse","response","success","alert","type","message","display","data","statePermission","map","permission","push","value","id","label","setState","createRole","formValues","multivalues","val","body","JSON","stringify","error","handleSubmit","e","handleMultiChange","option","handleResetForm","document","getElementById","reset","getState","authentication","Auth","text","parse","obj","find","p","addPermission","indexOf","setSubmitting","values","isSubmitting","errors","touched","handleChange"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAAQC,KAAR,QAAoB,+BAApB;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAuCC,SAAvC,EAAkDC,GAAlD,EAAuDC,SAAvD,EAAkEC,KAAlE,EAAyEC,KAAzE,EAAgFC,GAAhF,QAA0F,YAA1F;AACA,SAAQC,WAAR,EAAqBC,QAArB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,CAA3C,EAA8CC,GAA9C,QAAwD,eAAxD;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,IAAvB,QAAkC,QAAlC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,gCAAP;AAEA,IAAMC,UAAU,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AAClCC,EAAAA,IAAI,EAAEL,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,EAAkCC,GAAlC,CAAsC,EAAtC,EAA0C,wBAA1C;AAD4B,CAAnB,CAAnB;;IAIMC,M;;;AACF,oBAAc;AAAA;;AAAA;;AACV;AADU,UA2BdC,cA3Bc,yEA2BG;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,cAAAA,WADK,GACW,MAAKC,KADhB,CACLD,WADK;AAEPE,cAAAA,cAFO,GAEU;AACnBC,gBAAAA,MAAM,EAAE,KADW;AAEnBC,gBAAAA,OAAO,EAAE;AACL,kCAAgB,kBADX;AAEL,oDAA2B,MAAKH,KAAL,CAAWI,IAAX,CAAgBC,KAA3C;AAFK;AAFU,eAFV;AASbC,cAAAA,KAAK,WAAIxC,MAAM,CAACyC,QAAX,wBAAwCN,cAAxC,CAAL,CACKO,IADL,CACU,MAAKC,cADf,EAEKD,IAFL,CAEU,UAAAE,QAAQ,EAAI;AACd,oBAAGA,QAAQ,CAACC,OAAT,KAAqB,IAAxB,EAA6B;AACzB,sBAAMC,KAAK,GAAG;AACVC,oBAAAA,IAAI,EAAE,SADI;AAEVC,oBAAAA,OAAO,EAAEJ,QAAQ,CAACI,OAFR;AAGVC,oBAAAA,OAAO,EAAE;AAHC,mBAAd;AADyB,sBAMlBhB,YANkB,GAMHW,QAAQ,CAACM,IANN,CAMlBjB,WANkB;AAOzB,sBAAIkB,eAAe,GAAG,EAAtB;;AACAlB,kBAAAA,YAAW,CAACmB,GAAZ,CAAiB,UAAAC,UAAU;AAAA,2BACvBF,eAAe,CAACG,IAAhB,CAAqB;AACjBC,sBAAAA,KAAK,EAAEF,UAAU,CAACG,EADD;AAEjBC,sBAAAA,KAAK,EAAEJ,UAAU,CAAC1B;AAFD,qBAArB,CADuB;AAAA,mBAA3B;;AAMA,wBAAK+B,QAAL,CAAc;AAACzB,oBAAAA,WAAW,EAAEkB;AAAd,mBAAd;AACH;;AACD,uBAAOP,QAAP;AACH,eApBL;;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA3BH;AAAA,UA4Dde,UA5Dc,yEA4DD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACyB,MAAKzB,KAD9B,EACH0B,UADG,eACHA,UADG,EACSC,WADT,eACSA,WADT;AAETD,cAAAA,UAAU,CAAC3B,WAAX,GAAyB,EAAzB;AACA4B,cAAAA,WAAW,CAACT,GAAZ,CAAgB,UAAAU,GAAG,EAAI;AACnBF,gBAAAA,UAAU,CAAC3B,WAAX,CAAuBqB,IAAvB,CAA4BQ,GAAG,CAACP,KAAhC;AACH,eAFD;AAGMpB,cAAAA,cANG,GAMc;AACnBC,gBAAAA,MAAM,EAAE,MADW;AAEnBC,gBAAAA,OAAO,EAAE;AACL,kCAAgB,kBADX;AAEL,oDAA2B,MAAKH,KAAL,CAAWI,IAAX,CAAgBC,KAA3C;AAFK,iBAFU;AAMnBwB,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,UAAf;AANa,eANd;AAcTpB,cAAAA,KAAK,WAAIxC,MAAM,CAACyC,QAAX,kBAAkCN,cAAlC,CAAL,CACKO,IADL,CACU,MAAKC,cADf,EAEKD,IAFL,CAEU,UAAAE,QAAQ,EAAI;AACd,oBAAGA,QAAQ,CAACC,OAAT,KAAqB,IAAxB,EAA6B;AACzB,sBAAMC,KAAK,GAAG;AACVC,oBAAAA,IAAI,EAAE,SADI;AAEVC,oBAAAA,OAAO,EAAEJ,QAAQ,CAACI,OAFR;AAGVC,oBAAAA,OAAO,EAAE;AAHC,mBAAd;;AAKA,wBAAKS,QAAL,CAAc;AAACZ,oBAAAA,KAAK,EAALA;AAAD,mBAAd;AACH,iBAPD,MAQI;AACA,sBAAMA,MAAK,GAAG;AACVC,oBAAAA,IAAI,EAAE,QADI;AAEVC,oBAAAA,OAAO,EAAEJ,QAAQ,CAACsB,KAAT,CAAelB,OAFd;AAGVC,oBAAAA,OAAO,EAAE;AAHC,mBAAd;;AAKA,wBAAKS,QAAL,CAAc;AAACZ,oBAAAA,KAAK,EAALA;AAAD,mBAAd;AACH;;AACD,uBAAOF,QAAP;AACH,eApBL;;AAdS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5DC;;AAAA,UAuGduB,YAvGc,GAuGC,UAAAC,CAAC,EAAI;AAChB,YAAKT,UAAL;AACH,KAzGa;;AAAA,UA2GdU,iBA3Gc,GA2GM,UAAAC,MAAM,EAAI;AAC1B,YAAKZ,QAAL,CAAc;AAACG,QAAAA,WAAW,EAAES;AAAd,OAAd;AACH,KA7Ga;;AAAA,UA+GdC,eA/Gc,GA+GI,YAAM;AACpBC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAAvC;AACH,KAjHa;;AAGV,UAAKxC,KAAL,GAAa;AACTI,MAAAA,IAAI,EAAErC,KAAK,CAAC0E,QAAN,GAAiBC,cAAjB,CAAgCC,IAD7B;AAETjB,MAAAA,UAAU,EAAE;AACRjC,QAAAA,IAAI,EAAE,EADE;AAERM,QAAAA,WAAW,EAAE;AAFL,OAFH;AAMT4B,MAAAA,WAAW,EAAE,EANJ;AAQT5B,MAAAA,WAAW,EAAE,EARJ;AASTa,MAAAA,KAAK,EAAE;AACHG,QAAAA,OAAO,EAAE,KADN;AAEHF,QAAAA,IAAI,EAAE,SAFH;AAGHC,QAAAA,OAAO,EAAE;AAHN;AATE,KAAb;AAHU;AAkBb;;;;yCAKoB;AACjB,WAAKhB,cAAL;AACH;;;mCAwEcY,Q,EAAU;AACrB,aAAOA,QAAQ,CAACkC,IAAT,GAAgBpC,IAAhB,CAAqB,UAAAoC,IAAI,EAAI;AAChC,eAAOA,IAAI,IAAId,IAAI,CAACe,KAAL,CAAWD,IAAX,CAAf;AACH,OAFM,CAAP;AAGH;;;mCAcctB,E,EAAG;AAAA,UACTI,UADS,GACK,KAAK1B,KADV,CACT0B,UADS;AAEd,UAAIoB,GAAG,GAAGpB,UAAU,CAAC3B,WAAX,CAAuBgD,IAAvB,CAA4B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAAC1B,EAAF,KAASA,EAAb;AAAA,OAA7B,CAAV;;AACA,UAAGwB,GAAH,EAAQ;AACJ,YAAGpB,UAAU,CAACuB,aAAX,CAAyBC,OAAzB,CAAiC5B,EAAE,KAAK,CAAC,CAAzC,CAAH,EAA+C;AAC3CI,UAAAA,UAAU,CAACuB,aAAX,CAAyB7B,IAAzB,CAA8BE,EAA9B;AACH;;AACD,eAAO,IAAP;AACH;;AACD,aAAO,KAAP;AACH;;;6BAEQ;AAAA;;AAAA,yBAC6B,KAAKtB,KADlC;AAAA,UACED,WADF,gBACEA,WADF;AAAA,UACe2B,UADf,gBACeA,UADf;AAEL,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAGI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AACI,QAAA,aAAa,EAAE,KAAK1B,KAAL,CAAW0B,UAD9B;AAEI,QAAA,kBAAkB,EAAE,IAFxB;AAGI,QAAA,gBAAgB,EAAEpC,UAHtB;AAII,QAAA,QAAQ,EAAE,kBAAC0B,IAAD,SAA2B;AAAA,cAAnBmC,aAAmB,SAAnBA,aAAmB;AACjCA,UAAAA,aAAa,CAAC,IAAD,CAAb;;AACA,UAAA,MAAI,CAAC3B,QAAL,CAAc;AAACE,YAAAA,UAAU,EAAEV;AAAb,WAAd;;AACA,UAAA,MAAI,CAACiB,YAAL;;AACAkB,UAAAA,aAAa,CAAC,KAAD,CAAb;AACH,SATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWK;AAAA,YAAGC,MAAH,SAAGA,MAAH;AAAA,YAAWC,YAAX,SAAWA,YAAX;AAAA,YAAyBC,MAAzB,SAAyBA,MAAzB;AAAA,YAAiCC,OAAjC,SAAiCA,OAAjC;AAAA,YAA0CC,YAA1C,SAA0CA,YAA1C;AAAA,4BACG,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA6B,oBAAC,GAAD;AAAK,UAAA,IAAI,EAAE,EAAX;AAAe,UAAA,KAAK,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA7B,eADJ,eAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,KAAK,EAAEJ,MAAM,CAAC3D,IAA3C;AAAiD,UAAA,SAAS,yBAAkB6D,MAAM,CAAC7D,IAAP,IAAe8D,OAAO,CAAC9D,IAAvB,IAA+B,YAAjD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGK6D,MAAM,CAAC7D,IAAP,IAAe8D,OAAO,CAAC9D,IAAvB,gBAA8B;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmC6D,MAAM,CAAC7D,IAA1C,CAA9B,GAAsF,IAH3F,CADJ,CADJ,CAFJ,eAYI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,MAAD;AACI,UAAA,OAAO,EAAIM,WADf;AAEI,UAAA,KAAK,EAAE,MAAI,CAACC,KAAL,CAAW2B,WAFtB;AAGI,UAAA,QAAQ,EAAE,MAAI,CAACQ,iBAHnB;AAII,UAAA,OAAO,EAAE,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,CAZJ,CADJ,eAyBI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAE,EAAnB;AAAuB,UAAA,KAAK,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,UADJ,EAIQ,MAAI,CAACnC,KAAL,CAAWY,KAAX,CAAiBG,OAAjB,iBACJ,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAE,MAAI,CAACf,KAAL,CAAWY,KAAX,CAAiBC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MAAI,CAACb,KAAL,CAAWY,KAAX,CAAiBE,OADtB,CALJ,CAzBJ,CADH;AAAA,OAXL,CADJ,CADJ,CADJ,CADJ,CADJ,CAHJ,CADJ;AAqEH;;;;EAvMgBlD,S;;AA0MrB,eAAeiC,MAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport config from \"../../app/config\";\nimport {store} from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport {Alert, Button, Card, CardBody, CardTitle, Col, FormGroup, Input, Label, Row} from \"reactstrap\";\nimport {CheckSquare, FileText, Info, Mail, X, Map} from \"react-feather\";\nimport {Field, Formik, Form} from \"formik\";\nimport * as Yup from \"yup\";\nimport Select from 'react-select';\nimport \"react-select/dist/react-select\";\n\nconst formSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required\").max(50, \"Role name is too long.\")\n});\n\nclass Create extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            auth: store.getState().authentication.Auth,\n            formValues: {\n                name: '',\n                permissions: []\n            },\n            multivalues: [\n            ],\n            permissions: [],\n            alert: {\n                display: false,\n                type: \"success\",\n                message: \"\"\n            }\n        };\n    }\n\n\n\n\n    componentWillMount() {\n        this.getPermissions();\n    }\n\n    getPermissions = async () => {\n        const { permissions } = this.state;\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            }\n        };\n        fetch(`${config.base_url}v1/acl/permission`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    const {permissions} = response.data;\n                    let statePermission = [];\n                    permissions.map( permission => (\n                        statePermission.push({\n                            value: permission.id,\n                            label: permission.name\n                        })\n                    ));\n                    this.setState({permissions: statePermission });\n                }\n                return response;\n            });\n    };\n\n\n    createRole = async () => {\n        let { formValues, multivalues } = this.state;\n        formValues.permissions = [];\n        multivalues.map(val => {\n            formValues.permissions.push(val.value);\n        });\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            },\n            body: JSON.stringify(formValues)\n        };\n        fetch(`${config.base_url}v1/acl/role`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                else{\n                    const alert = {\n                        type: \"danger\",\n                        message: response.error.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                return response;\n            });\n    };\n\n    handleResponse(response) {\n        return response.text().then(text => {\n            return text && JSON.parse(text);\n        });\n    }\n\n    handleSubmit = e => {\n        this.createRole();\n    };\n\n    handleMultiChange = option => {\n        this.setState({multivalues: option});\n    };\n\n    handleResetForm = () => {\n        document.getElementById(\"vehicleForm\").reset();\n    };\n\n    findPermission(id){\n        let {formValues} = this.state;\n        let obj = formValues.permissions.find(p => p.id === id);\n        if(obj) {\n            if(formValues.addPermission.indexOf(id === -1)){\n                formValues.addPermission.push(id);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n        const {permissions, formValues} = this.state;\n        return (\n            <Fragment>\n                <ContentHeader>Vehicles Update </ContentHeader>\n\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardBody>\n                                <div className=\"px-3\">\n                                    <Formik\n                                        initialValues={this.state.formValues}\n                                        enableReinitialize={true}\n                                        validationSchema={formSchema}\n                                        onSubmit={(data, {setSubmitting}) => {\n                                            setSubmitting(true);\n                                            this.setState({formValues: data});\n                                            this.handleSubmit();\n                                            setSubmitting(false);\n                                        }}\n                                    >\n                                        {({ values, isSubmitting, errors, touched, handleChange}) => (\n                                            <Form id=\"vehicleForm\">\n                                                <div className=\"form-body\">\n                                                    <h4 className=\"form-section\"><Map size={20} color=\"#212529\" /> Role Info</h4>\n                                                    <Row>\n                                                        <Col md=\"12\">\n                                                            <FormGroup>\n                                                                <Label for=\"name\">Role Name</Label>\n                                                                <Field name=\"name\" id=\"name\" value={values.name} className={`form-control ${errors.name && touched.name && 'is-invalid'}`}/>\n                                                                {errors.name && touched.name ? <div className=\"invalid-feedback\">{errors.name}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col md=\"12\">\n                                                            <Select\n                                                                options = {permissions}\n                                                                value={this.state.multivalues}\n                                                                onChange={this.handleMultiChange}\n                                                                isMulti={true}  />\n                                                        </Col>\n                                                    </Row>\n\n                                                </div>\n\n                                                <div className=\"form-actions\">\n                                                    <Button color=\"primary\" type=\"submit\">\n                                                        <CheckSquare size={16} color=\"#FFF\" /> Save\n                                                    </Button>\n                                                    {   this.state.alert.display &&\n                                                    <Alert color={this.state.alert.type} >\n                                                        {this.state.alert.message}\n                                                    </Alert>\n                                                    }\n\n\n                                                </div>\n                                            </Form>\n\n                                        )}\n                                    </Formik>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}