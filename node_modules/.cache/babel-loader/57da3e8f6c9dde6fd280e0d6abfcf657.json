{"ast":null,"code":"import _regeneratorRuntime from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/imirfanmumtaz/www/react/apex-react/src/views/tickets/edit.js\";\nimport React, { Component, Fragment } from \"react\";\nimport config from \"../../app/config\";\nimport { store } from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport { Alert, Button, Card, CardBody, CardTitle, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { CheckSquare, FileText, Info, Mail, X, Home } from \"react-feather\";\nimport { useForm } from 'react-hook-form';\nimport { Field, Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nvar formSchema = Yup.object().shape({\n  name: Yup.string().max(50, \"Too long, max 50 characters\").required(\"Required\"),\n  merchant_id: Yup.number().required(\"Required\"),\n  phone: Yup.number().required(\"Required\"),\n  full: Yup.string().max(190, 'Address is too long').required(\"Required\")\n});\n\nvar Edit = /*#__PURE__*/function (_Component) {\n  _inherits(Edit, _Component);\n\n  function Edit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Edit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Edit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      auth: store.getState().authentication.Auth,\n      formValues: {\n        code: '',\n        issuance: '',\n        expiry: '',\n        status: null,\n        kin_name: '',\n        kin_relation: '',\n        kin_contact: '',\n        merchant: {\n          id: null,\n          name: ''\n        },\n        passenger: {\n          id: null,\n          name: ''\n        },\n        pickup: {\n          full_address: ''\n        },\n        dropoff: {\n          full_address: ''\n        }\n      },\n      passengers: [],\n      STATUS: new Array(\"Expired\", 'Active', \"Refunded\", \"Claimed\")\n    };\n    _this.getMerchants = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var requestOptions;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              requestOptions = {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": \"Bearer \".concat(_this.state.auth.token)\n                }\n              };\n              fetch(\"\".concat(config.base_url, \"v1/merchant\"), requestOptions).then(_this.handleResponse).then(function (response) {\n                if (response.success === true) {\n                  var merchants = response.data.merchants;\n\n                  _this.setState({\n                    merchants: merchants\n                  });\n                }\n\n                return response;\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.getBooth = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var id, formValues, requestOptions;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = _this.props.match.params.id;\n              formValues = _this.state.formValues;\n              requestOptions = {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": \"Bearer \".concat(_this.state.auth.token)\n                }\n              };\n              fetch(\"\".concat(config.base_url, \"v1/booth/\").concat(id), requestOptions).then(_this.handleResponse).then(function (response) {\n                if (response.success === true) {\n                  var _formValues = response.data.booth;\n                  _formValues.merchant_id = _formValues.merchant.id;\n                  _formValues.phone = _formValues.contact.phone;\n                  _formValues.full = _formValues.address.full_address;\n\n                  _this.setState({\n                    formValues: _formValues\n                  });\n                }\n\n                return response;\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.updateBooth = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var id, formValues, requestOptions;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              id = _this.props.match.params.id;\n              formValues = _this.state.formValues;\n              formValues.contact = {\n                phone: formValues.phone,\n                email: null\n              };\n              formValues.address = {\n                full: formValues.full,\n                latitude: formValues.address.latitude,\n                longitude: formValues.address.longitude\n              };\n              requestOptions = {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": \"Bearer \".concat(_this.state.auth.token)\n                },\n                body: JSON.stringify(formValues)\n              };\n              fetch(\"\".concat(config.base_url, \"v1/booth/\").concat(id), requestOptions).then(_this.handleResponse).then(function (response) {\n                if (response.success === true) {\n                  var alert = {\n                    type: \"success\",\n                    message: response.message,\n                    display: true\n                  };\n\n                  _this.setState({\n                    alert: alert\n                  });\n                } else {\n                  var _alert = {\n                    type: \"danger\",\n                    message: response.error.message,\n                    display: true\n                  };\n\n                  _this.setState({\n                    alert: _alert\n                  });\n                }\n\n                return response;\n              });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    _this.handleSubmit = function (e) {\n      _this.updateBooth();\n    };\n\n    _this.handleChange = function (e) {\n      var formValues = _this.state.formValues;\n      formValues[e.target.name] = e.target.value;\n\n      _this.setState({\n        formValues: formValues\n      });\n    };\n\n    _this.handleResetForm = function () {\n      document.getElementById(\"vehicleForm\").reset();\n    };\n\n    return _this;\n  }\n\n  _createClass(Edit, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getMerchants();\n      this.getBooth();\n    }\n  }, {\n    key: \"handleResponse\",\n    value: function handleResponse(response) {\n      return response.text().then(function (text) {\n        return text && JSON.parse(text);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          formData = _this$state.formData,\n          formValues = _this$state.formValues,\n          merchants = _this$state.merchants;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ContentHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, \"Booth Update \"), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Formik, {\n        enableReinitialize: true,\n        initialValues: formValues,\n        validationSchema: formSchema,\n        onSubmit: function onSubmit(data, _ref4) {\n          var setSubmitting = _ref4.setSubmitting,\n              resetForm = _ref4.resetForm;\n          setSubmitting(true);\n\n          _this2.setState({\n            formValues: data\n          });\n\n          _this2.handleSubmit();\n\n          setSubmitting(false);\n          resetForm();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 37\n        }\n      }, function (_ref5) {\n        var values = _ref5.values,\n            isSubmitting = _ref5.isSubmitting,\n            errors = _ref5.errors,\n            touched = _ref5.touched,\n            handleChange = _ref5.handleChange;\n        return /*#__PURE__*/React.createElement(Form, {\n          id: \"vehicleForm\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-body\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"form-section\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Home, {\n          size: 20,\n          color: \"#212529\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 74\n          }\n        }), \" Booth Info\"), /*#__PURE__*/React.createElement(Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: \"name\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 57\n          }\n        }, \"Booth Name\"), /*#__PURE__*/React.createElement(Field, {\n          name: \"name\",\n          id: \"name\",\n          value: values.name,\n          className: \"form-control \".concat(errors.name && touched.name && 'is-invalid'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 57\n          }\n        }), errors.name && touched.name ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 88\n          }\n        }, errors.name) : null)), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: \"merchant_id\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 57\n          }\n        }, \"Merchant\"), /*#__PURE__*/React.createElement(\"select\", {\n          onChange: handleChange,\n          id: \"merchant_id\",\n          name: \"merchant_id\",\n          className: \"form-control \".concat(errors.merchant_id && touched.merchant_id && 'is-invalid'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"0\",\n          defaultValue: \"\",\n          disabled: \"\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 61\n          }\n        }, \"Select Type\"), merchants.map(function (merchant) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: merchant.id,\n            key: merchant.id,\n            selected: merchant.id === formValues.merchant.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 69\n            }\n          }, \"\".concat(merchant.name, \" (\").concat(merchant.cnic, \")\"));\n        })), errors.merchant_id && touched.merchant_id ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 102\n          }\n        }, errors.merchant_id) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: \"phone\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 57\n          }\n        }, \"Phone\"), /*#__PURE__*/React.createElement(Field, {\n          id: \"phone\",\n          value: values.phone,\n          name: \"phone\",\n          className: \"form-control \".concat(errors.phone && touched.phone && 'is-invalid'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 57\n          }\n        }), errors.phone && touched.phone ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 90\n          }\n        }, errors.phone) : null)), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: \"full\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 57\n          }\n        }, \"Address\"), /*#__PURE__*/React.createElement(Field, {\n          name: \"full\",\n          value: values.full,\n          id: \"full\",\n          className: \"form-control \".concat(errors.full && touched.full && 'is-invalid'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 57\n          }\n        }), errors.full && touched.full ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 88\n          }\n        }, errors.full) : null)))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-actions\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"primary\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(CheckSquare, {\n          size: 16,\n          color: \"#FFF\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 49\n          }\n        }), \" Save\"), _this2.state.alert.display && /*#__PURE__*/React.createElement(Alert, {\n          color: _this2.state.alert.type,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 49\n          }\n        }, _this2.state.alert.message)));\n      })))))));\n    }\n  }]);\n\n  return Edit;\n}(Component);\n\nexport default Edit;","map":{"version":3,"sources":["/home/imirfanmumtaz/www/react/apex-react/src/views/tickets/edit.js"],"names":["React","Component","Fragment","config","store","ContentHeader","Alert","Button","Card","CardBody","CardTitle","Col","FormGroup","Input","Label","Row","CheckSquare","FileText","Info","Mail","X","Home","useForm","Field","Formik","Form","Yup","formSchema","object","shape","name","string","max","required","merchant_id","number","phone","full","Edit","state","auth","getState","authentication","Auth","formValues","code","issuance","expiry","status","kin_name","kin_relation","kin_contact","merchant","id","passenger","pickup","full_address","dropoff","passengers","STATUS","Array","getMerchants","requestOptions","method","headers","token","fetch","base_url","then","handleResponse","response","success","merchants","data","setState","getBooth","props","match","params","booth","contact","address","updateBooth","email","latitude","longitude","body","JSON","stringify","alert","type","message","display","error","handleSubmit","e","handleChange","target","value","handleResetForm","document","getElementById","reset","text","parse","formData","setSubmitting","resetForm","values","isSubmitting","errors","touched","map","cnic"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport config from \"../../app/config\";\nimport {store} from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport {Alert, Button, Card, CardBody, CardTitle, Col, FormGroup, Input, Label, Row} from \"reactstrap\";\nimport {CheckSquare, FileText, Info, Mail, X, Home} from \"react-feather\";\nimport { useForm } from 'react-hook-form'\nimport {Field, Formik, Form} from \"formik\";\nimport * as Yup from \"yup\";\n\nconst formSchema = Yup.object().shape({\n    name: Yup.string().max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    merchant_id: Yup.number().required(\"Required\"),\n    phone: Yup.number().required(\"Required\"),\n    full: Yup.string().max(190, 'Address is too long').required(\"Required\")\n});\n\nclass Edit extends Component {\n\n    state = {\n        auth: store.getState().authentication.Auth,\n        formValues: {\n            code: '',\n            issuance: '',\n            expiry: '',\n            status: null,\n            kin_name: '',\n            kin_relation: '',\n            kin_contact: '',\n            merchant:{\n                id: null,\n                name: ''\n            },\n            passenger:{\n                id: null,\n                name: ''\n            },\n            pickup: {\n                full_address: ''\n            },\n            dropoff: {\n                full_address: ''\n            }\n        },\n        passengers: [],\n        STATUS: new Array(\"Expired\", 'Active', \"Refunded\", \"Claimed\")\n    };\n\n    componentWillMount() {\n        this.getMerchants();\n        this.getBooth();\n    }\n\n    getMerchants = async () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            }\n        };\n        fetch(`${config.base_url}v1/merchant`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const merchants = response.data.merchants;\n                    this.setState({merchants });\n                }\n                return response;\n            });\n    };\n\n    getBooth = async () => {\n        const { id } = this.props.match.params;\n        const { formValues } = this.state;\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            }\n        };\n        fetch(`${config.base_url}v1/booth/${id}`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    let formValues = response.data.booth;\n                    formValues.merchant_id = formValues.merchant.id;\n                    formValues.phone = formValues.contact.phone;\n                    formValues.full = formValues.address.full_address;\n                    this.setState({formValues });\n                }\n                return response;\n            });\n    };\n\n    updateBooth = async () => {\n        const { id } = this.props.match.params;\n        let { formValues } = this.state;\n        formValues.contact = {\n            phone: formValues.phone,\n            email: null\n        };\n        formValues.address = {\n            full: formValues.full,\n            latitude: formValues.address.latitude,\n            longitude: formValues.address.longitude,\n        };\n\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            },\n            body: JSON.stringify(formValues)\n        };\n        fetch(`${config.base_url}v1/booth/${id}`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                else{\n                    const alert = {\n                        type: \"danger\",\n                        message: response.error.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                return response;\n            });\n    };\n\n    handleResponse(response) {\n        return response.text().then(text => {\n            return text && JSON.parse(text);\n        });\n    }\n\n    handleSubmit = e => {\n        this.updateBooth();\n    };\n\n    handleChange = e => {\n        const { formValues } = this.state;\n        formValues[e.target.name] = e.target.value;\n\n        this.setState({formValues})\n    };\n\n    handleResetForm = () => {\n        document.getElementById(\"vehicleForm\").reset();\n    };\n\n    render() {\n        const {formData, formValues, merchants} = this.state;\n        return (\n            <Fragment>\n                <ContentHeader>Booth Update </ContentHeader>\n\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardBody>\n                                <div className=\"px-3\">\n                                    <Formik\n                                        enableReinitialize={true}\n                                        initialValues={formValues}\n                                        validationSchema={formSchema}\n                                        onSubmit={(data, {setSubmitting, resetForm}) => {\n                                            setSubmitting(true);\n                                            this.setState({formValues: data});\n                                            this.handleSubmit();\n                                            setSubmitting(false);\n                                            resetForm();\n                                        }}\n                                    >\n                                        {({ values, isSubmitting, errors, touched, handleChange}) => (\n                                            <Form id=\"vehicleForm\">\n                                        <div className=\"form-body\">\n                                            <h4 className=\"form-section\"><Home size={20} color=\"#212529\" /> Booth Info</h4>\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"name\">Booth Name</Label>\n                                                        <Field name=\"name\" id=\"name\" value={values.name} className={`form-control ${errors.name && touched.name && 'is-invalid'}`}/>\n                                                        {errors.name && touched.name ? <div className=\"invalid-feedback\">{errors.name}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"merchant_id\">Merchant</Label>\n                                                        <select onChange={handleChange} id=\"merchant_id\" name=\"merchant_id\" className={`form-control ${errors.merchant_id && touched.merchant_id && 'is-invalid'}`}>\n                                                            <option value=\"0\" defaultValue=\"\" disabled=\"\">Select Type</option>\n                                                            {\n                                                                merchants.map((merchant) => (\n                                                                    <option value={merchant.id} key={merchant.id} selected={merchant.id === formValues.merchant.id}>{`${merchant.name} (${merchant.cnic})`}</option>\n                                                                ))\n                                                            }\n                                                        </select>\n                                                        {errors.merchant_id && touched.merchant_id ? <div className=\"invalid-feedback\">{errors.merchant_id}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"phone\">Phone</Label>\n                                                        <Field id=\"phone\" value={values.phone}  name=\"phone\" className={`form-control ${errors.phone && touched.phone && 'is-invalid'}`} />\n                                                        {errors.phone && touched.phone ? <div className=\"invalid-feedback\">{errors.phone}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"full\">Address</Label>\n                                                        <Field name=\"full\" value={values.full} id=\"full\" className={`form-control ${errors.full && touched.full && 'is-invalid'}`} />\n                                                        {errors.full && touched.full ? <div className=\"invalid-feedback\">{errors.full}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n                                        </div>\n\n                                        <div className=\"form-actions\">\n                                            <Button color=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                                                <CheckSquare size={16} color=\"#FFF\" /> Save\n                                            </Button>\n                                            {   this.state.alert.display &&\n                                                <Alert color={this.state.alert.type} >\n                                                    {this.state.alert.message}\n                                                </Alert>\n                                            }\n                                        </div>\n                                    </Form>\n                                        )}\n                                    </Formik>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}