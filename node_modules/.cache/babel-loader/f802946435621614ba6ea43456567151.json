{"ast":null,"code":"// import config from 'config';\nexport var loginService = {\n  login: login,\n  logout: logout\n};\n\nfunction login(username, password) {\n  var requestOptions = {\n    method: 'Post',\n    headers: {\n      'Content-Type': 'application/json',\n      'Client-ID': process.env.REACT_APP_API_CLIENT,\n      'Client-Secret': process.env.REACT_APP_API_SECRET,\n      'Accept': '*/*'\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    }),\n    redirect: 'follow'\n  };\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"v1/auth/get-access-token\"), requestOptions).then(handleResponse).then(function (response) {\n    localStorage.setItem('user', JSON.stringify(response.data.authentication.user));\n    localStorage.setItem('access_token', JSON.stringify(response.data.authentication.access_token));\n    return response;\n  });\n}\n\nfunction logout() {\n  //remove use\n  // remove user from local storage to log user out\n  localStorage.removeItem('user');\n  localStorage.removeItem('access_token');\n}\n\nfunction handleResponse(response) {\n  return response.text().then(function (text) {\n    var data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        logout();\n        window.location.reload(true);\n      }\n\n      var error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"sources":["/home/imirfanmumtaz/www/react/apex-react/src/redux/services/login.services.js"],"names":["loginService","login","logout","username","password","requestOptions","method","headers","process","env","REACT_APP_API_CLIENT","REACT_APP_API_SECRET","body","JSON","stringify","redirect","fetch","REACT_APP_API_URL","then","handleResponse","response","localStorage","setItem","data","authentication","user","access_token","removeItem","text","parse","ok","status","window","location","reload","error","message","statusText","Promise","reject"],"mappings":"AAAA;AACA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAALA,KADwB;AAExBC,EAAAA,MAAM,EAANA;AAFwB,CAArB;;AAKP,SAASD,KAAT,CAAeE,QAAf,EAAyBC,QAAzB,EAAmC;AAC/B,MAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,mBAAaC,OAAO,CAACC,GAAR,CAAYC,oBAFpB;AAGL,uBAAiBF,OAAO,CAACC,GAAR,CAAYE,oBAHxB;AAIL,gBAAU;AAJL,KAFU;AAQnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEX,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,QAAQ,EAARA;AAAZ,KAAf,CARa;AASnBW,IAAAA,QAAQ,EAAE;AATS,GAAvB;AAYA,SAAOC,KAAK,WAAIR,OAAO,CAACC,GAAR,CAAYQ,iBAAhB,+BAA6DZ,cAA7D,CAAL,CACFa,IADE,CACGC,cADH,EAEFD,IAFE,CAEG,UAAAE,QAAQ,EAAI;AACdC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACC,SAAL,CAAeM,QAAQ,CAACG,IAAT,CAAcC,cAAd,CAA6BC,IAA5C,CAA7B;AACAJ,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCT,IAAI,CAACC,SAAL,CAAeM,QAAQ,CAACG,IAAT,CAAcC,cAAd,CAA6BE,YAA5C,CAArC;AACA,WAAON,QAAP;AACH,GANE,CAAP;AAOH;;AAED,SAASlB,MAAT,GAAkB;AACd;AACA;AACAmB,EAAAA,YAAY,CAACM,UAAb,CAAwB,MAAxB;AACAN,EAAAA,YAAY,CAACM,UAAb,CAAwB,cAAxB;AACH;;AAED,SAASR,cAAT,CAAwBC,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACQ,IAAT,GAAgBV,IAAhB,CAAqB,UAAAU,IAAI,EAAI;AAChC,QAAML,IAAI,GAAGK,IAAI,IAAIf,IAAI,CAACgB,KAAL,CAAWD,IAAX,CAArB;;AACA,QAAI,CAACR,QAAQ,CAACU,EAAd,EAAkB;AACd,UAAIV,QAAQ,CAACW,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACA7B,QAAAA,MAAM;AACN8B,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACH;;AAED,UAAMC,KAAK,GAAIZ,IAAI,IAAIA,IAAI,CAACa,OAAd,IAA0BhB,QAAQ,CAACiB,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AAED,WAAOZ,IAAP;AACH,GAdM,CAAP;AAeH","sourcesContent":["// import config from 'config';\nexport const loginService = {\n    login,\n    logout\n};\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: 'Post',\n        headers: {\n            'Content-Type': 'application/json',\n            'Client-ID': process.env.REACT_APP_API_CLIENT,\n            'Client-Secret': process.env.REACT_APP_API_SECRET,\n            'Accept': '*/*'\n        },\n        body: JSON.stringify({ username, password }),\n        redirect: 'follow'\n    };\n\n    return fetch(`${process.env.REACT_APP_API_URL}v1/auth/get-access-token`, requestOptions)\n        .then(handleResponse)\n        .then(response => {\n            localStorage.setItem('user', JSON.stringify(response.data.authentication.user));\n            localStorage.setItem('access_token', JSON.stringify(response.data.authentication.access_token));\n            return response;\n        });\n}\n\nfunction logout() {\n    //remove use\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n    localStorage.removeItem('access_token');\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                window.location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}"]},"metadata":{},"sourceType":"module"}