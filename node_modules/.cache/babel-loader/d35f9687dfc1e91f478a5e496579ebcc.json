{"ast":null,"code":"import _regeneratorRuntime from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/imirfanmumtaz/www/react/apex-react/src/views/tickets/show.js\";\nimport React, { Component, Fragment } from \"react\";\nimport config from \"../../app/config\";\nimport { store } from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport { Button, Card, CardBody, Col, FormGroup, Label, Row, Form, Input } from \"reactstrap\";\nimport { CheckSquare, X, Map, Edit } from \"react-feather\";\nimport { NavLink } from \"react-router-dom\";\n\nvar Show = /*#__PURE__*/function (_Component) {\n  _inherits(Show, _Component);\n\n  function Show() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Show);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Show)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      auth: store.getState().authentication.Auth,\n      formValues: {\n        name: '',\n        merchant_id: null,\n        merchant: {\n          id: null\n        },\n        contact: {\n          phone: null\n        },\n        address: {\n          full_address: ''\n        }\n      },\n      merchants: []\n    };\n    _this.getPassengers = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var requestOptions;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              requestOptions = {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": \"Bearer \".concat(_this.state.auth.token)\n                }\n              };\n              fetch(\"\".concat(config.base_url, \"v1/passenger\"), requestOptions).then(_this.handleResponse).then(function (response) {\n                if (response.success === true) {\n                  var passengers = response.data.passengers;\n\n                  _this.setState({\n                    passengers: passengers\n                  });\n                }\n\n                return response;\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.getTicket = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var id, formValues, requestOptions;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = _this.props.match.params.id;\n              formValues = _this.state.formValues;\n              requestOptions = {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": \"Bearer \".concat(_this.state.auth.token)\n                }\n              };\n              fetch(\"\".concat(config.base_url, \"v1/ticket/\").concat(id), requestOptions).then(_this.handleResponse).then(function (response) {\n                if (response.success === true) {\n                  var _formValues = response.data.booth;\n\n                  _this.setState({\n                    formValues: _formValues\n                  });\n                }\n\n                return response;\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _this;\n  }\n\n  _createClass(Show, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getPassengers();\n      this.getTicket();\n    }\n  }, {\n    key: \"handleResponse\",\n    value: function handleResponse(response) {\n      return response.text().then(function (text) {\n        return text && JSON.parse(text);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          formValues = _this$state.formValues,\n          merchants = _this$state.merchants;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ContentHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, \"Booth Show \"), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        id: \"vehicleForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"form-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Map, {\n        size: 20,\n        color: \"#212529\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 74\n        }\n      }), \" Booth Info\"), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"booth_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 57\n        }\n      }, \"Booth Name\"), /*#__PURE__*/React.createElement(Input, {\n        name: \"booth_name\",\n        value: formValues.name,\n        disabled: true,\n        id: \"booth_name\",\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 57\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"merchant_id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 57\n        }\n      }, \"Booth Merchant\"), /*#__PURE__*/React.createElement(\"select\", {\n        id: \"merchant_id\",\n        name: \"merchant_id\",\n        className: \"form-control\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0\",\n        defaultValue: \"\",\n        disabled: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 61\n        }\n      }, \"Select Type\"), merchants.map(function (merchant) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: merchant.id,\n          key: merchant.id,\n          selected: merchant.id === formValues.merchant.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 69\n          }\n        }, merchant.name);\n      }))))), console.log(formValues), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"make\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 57\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"make\",\n        value: formValues.contact.phone,\n        disabled: true,\n        name: \"make\",\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 57\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"full_address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 57\n        }\n      }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n        name: \"full_address\",\n        value: formValues.address.full_address,\n        disabled: true,\n        id: \"model\",\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 57\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/booths/edit/\".concat(formValues.id),\n        className: \"item\",\n        activeclassname: \"active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"warning\",\n        className: \"mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Edit, {\n        size: 16,\n        color: \"#FFF\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 53\n        }\n      }), \" Edit\"))))))))));\n    }\n  }]);\n\n  return Show;\n}(Component);\n\nexport default Show;","map":{"version":3,"sources":["/home/imirfanmumtaz/www/react/apex-react/src/views/tickets/show.js"],"names":["React","Component","Fragment","config","store","ContentHeader","Button","Card","CardBody","Col","FormGroup","Label","Row","Form","Input","CheckSquare","X","Map","Edit","NavLink","Show","state","auth","getState","authentication","Auth","formValues","name","merchant_id","merchant","id","contact","phone","address","full_address","merchants","getPassengers","requestOptions","method","headers","token","fetch","base_url","then","handleResponse","response","success","passengers","data","setState","getTicket","props","match","params","booth","text","JSON","parse","map","console","log"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport config from \"../../app/config\";\nimport {store} from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport {Button, Card, CardBody, Col, FormGroup, Label, Row, Form, Input} from \"reactstrap\";\nimport {CheckSquare, X, Map, Edit} from \"react-feather\";\nimport {NavLink} from \"react-router-dom\";\n\n\nclass Show extends Component {\n\n    state = {\n        auth: store.getState().authentication.Auth,\n        formValues: {\n            name: '',\n            merchant_id: null,\n            merchant:{\n                id: null\n            },\n            contact: {\n                phone: null\n            },\n            address: {\n                full_address: ''\n            }\n        },\n        merchants: []\n    };\n\n    componentWillMount() {\n        this.getPassengers();\n        this.getTicket();\n    }\n\n    getPassengers = async () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            }\n        };\n        fetch(`${config.base_url}v1/passenger`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const {passengers} = response.data;\n                    this.setState({passengers });\n                }\n                return response;\n            });\n    };\n\n    getTicket = async () => {\n        const { id } = this.props.match.params;\n        const { formValues } = this.state;\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            }\n        };\n        fetch(`${config.base_url}v1/ticket/${id}`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const formValues = response.data.booth;\n                    this.setState({formValues });\n                }\n                return response;\n            });\n    };\n\n    handleResponse(response) {\n        return response.text().then(text => {\n            return text && JSON.parse(text);\n        });\n    }\n\n    render() {\n        const {formValues, merchants} = this.state;\n        return (\n            <Fragment>\n                <ContentHeader>Booth Show </ContentHeader>\n\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardBody>\n                                <div className=\"px-3\">\n                                    <Form id=\"vehicleForm\">\n                                        <div className=\"form-body\">\n                                            <h4 className=\"form-section\"><Map size={20} color=\"#212529\" /> Booth Info</h4>\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"booth_name\">Booth Name</Label>\n                                                        <Input name=\"booth_name\" value={formValues.name} disabled={true} id=\"booth_name\" className={`form-control`}/>\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"merchant_id\">Booth Merchant</Label>\n                                                        <select id=\"merchant_id\" name=\"merchant_id\" className={`form-control`} disabled={true}>\n                                                            <option value=\"0\" defaultValue=\"\" disabled=\"\">Select Type</option>\n                                                            {\n                                                                merchants.map((merchant) => (\n                                                                    <option value={merchant.id} key={merchant.id} selected={merchant.id === formValues.merchant.id}>{merchant.name}</option>\n                                                                ))\n                                                            }\n                                                        </select>\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            {console.log(formValues)}\n\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"make\">Phone</Label>\n                                                        <Input id=\"make\" value={formValues.contact.phone} disabled={true} name=\"make\" className={`form-control`} />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"full_address\">Address</Label>\n                                                        <Input name=\"full_address\" value={formValues.address.full_address} disabled={true} id=\"model\" className={`form-control`} />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n\n                                        </div>\n\n                                        <div className=\"form-actions\">\n                                            <NavLink to={`/booths/edit/${formValues.id}`} className=\"item\" activeclassname=\"active\">\n                                                <Button color=\"warning\" className=\"mr-1\">\n                                                    <Edit size={16} color=\"#FFF\" /> Edit\n                                                </Button>\n                                            </NavLink>\n\n\n                                        </div>\n                                    </Form>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}