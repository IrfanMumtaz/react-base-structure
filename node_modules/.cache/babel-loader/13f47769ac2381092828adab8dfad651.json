{"ast":null,"code":"import _regeneratorRuntime from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/imirfanmumtaz/www/react/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/imirfanmumtaz/www/react/apex-react/src/views/merchants/index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport CustomTabs from \"../../components/tabs/customTabs\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport { Card, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport config from \"../../app/config\"; // Table exmple pages\n\nimport MerchantTable from \"./merchantTable\";\nimport { store } from \"../../redux/storeConfig/store\";\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  function Index() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Index)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      auth: store.getState().authentication.Auth,\n      merchants: []\n    };\n    _this.getMerchants = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var requestOptions;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              requestOptions = {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": \"Bearer \".concat(_this.state.auth.token)\n                }\n              };\n              fetch(\"\".concat(config.base_url, \"v1/merchant\"), requestOptions).then(_this.handleResponse).then(function (response) {\n                if (response.success === true) {\n                  var merchants = response.data.merchants;\n\n                  _this.setState({\n                    merchants: merchants\n                  });\n                }\n\n                return response;\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getMerchants();\n    }\n  }, {\n    key: \"handleResponse\",\n    value: function handleResponse(response) {\n      return response.text().then(function (text) {\n        return text && JSON.parse(text);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var heading = ['Merchant Code', 'Name', 'CNIC', 'Phone', 'Address', 'Status', 'Action'];\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ContentHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, \"Merchant List \"), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CustomTabs, {\n        TabContent1: /*#__PURE__*/React.createElement(MerchantTable, {\n          heading: heading,\n          data: this.state.merchants,\n          misc: {\n            link: \"merchants\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 50\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }))))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["/home/imirfanmumtaz/www/react/apex-react/src/views/merchants/index.js"],"names":["React","Component","Fragment","CustomTabs","ContentHeader","Card","CardBody","CardTitle","Row","Col","config","MerchantTable","store","Index","state","auth","getState","authentication","Auth","merchants","getMerchants","requestOptions","method","headers","token","fetch","base_url","then","handleResponse","response","success","data","setState","text","JSON","parse","heading","link"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,GAApC,EAAyCC,GAAzC,QAAoD,YAApD;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,KAAR,QAAoB,+BAApB;;IAEMC,K;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAEH,KAAK,CAACI,QAAN,GAAiBC,cAAjB,CAAgCC,IADlC;AAEJC,MAAAA,SAAS,EAAE;AAFP,K;UASRC,Y,yEAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,cAAAA,cADK,GACY;AACnBC,gBAAAA,MAAM,EAAE,KADW;AAEnBC,gBAAAA,OAAO,EAAE;AACL,kCAAgB,kBADX;AAEL,oDAA2B,MAAKT,KAAL,CAAWC,IAAX,CAAgBS,KAA3C;AAFK;AAFU,eADZ;AAQXC,cAAAA,KAAK,WAAIf,MAAM,CAACgB,QAAX,kBAAkCL,cAAlC,CAAL,CACKM,IADL,CACU,MAAKC,cADf,EAEKD,IAFL,CAEU,UAAAE,QAAQ,EAAI;AACd,oBAAGA,QAAQ,CAACC,OAAT,KAAqB,IAAxB,EAA6B;AACzB,sBAAMX,SAAS,GAAGU,QAAQ,CAACE,IAAT,CAAcZ,SAAhC;;AACA,wBAAKa,QAAL,CAAc;AAACb,oBAAAA,SAAS,EAATA;AAAD,mBAAd;AACH;;AACD,uBAAOU,QAAP;AACH,eARL;;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;yCAJM;AACjB,WAAKT,YAAL;AACH;;;mCAqBcS,Q,EAAU;AACrB,aAAOA,QAAQ,CAACI,IAAT,GAAgBN,IAAhB,CAAqB,UAAAM,IAAI,EAAI;AAChC,eAAOA,IAAI,IAAIC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAf;AACH,OAFM,CAAP;AAGH;;;6BAEQ;AACL,UAAMG,OAAO,GAAG,CAAC,eAAD,EAAkB,MAAlB,EAA0B,MAA1B,EAAkC,OAAlC,EAA2C,SAA3C,EAAsD,QAAtD,EAAgE,QAAhE,CAAhB;AAEA,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAGI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,UAAD;AACI,QAAA,WAAW,eAAE,oBAAC,aAAD;AAAe,UAAA,OAAO,EAAEA,OAAxB;AAAiC,UAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWK,SAAlD;AAA6D,UAAA,IAAI,EAAE;AAACkB,YAAAA,IAAI,EAAE;AAAP,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CADJ,CADJ,CAHJ,CADJ;AAmBH;;;;EA1DepC,S;;AA6DpB,eAAeY,KAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport CustomTabs from \"../../components/tabs/customTabs\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport { Card, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport config from \"../../app/config\";\n\n// Table exmple pages\nimport MerchantTable from \"./merchantTable\";\nimport {store} from \"../../redux/storeConfig/store\";\n\nclass Index extends Component {\n\n    state = {\n        auth: store.getState().authentication.Auth,\n        merchants: []\n    };\n\n    componentWillMount() {\n        this.getMerchants();\n    };\n\n    getMerchants = async () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            }\n        };\n        fetch(`${config.base_url}v1/merchant`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const merchants = response.data.merchants;\n                    this.setState({merchants });\n                }\n                return response;\n            });\n    };\n\n    handleResponse(response) {\n        return response.text().then(text => {\n            return text && JSON.parse(text);\n        });\n    }\n\n    render() {\n        const heading = ['Merchant Code', 'Name', 'CNIC', 'Phone', 'Address', 'Status', 'Action'];\n\n        return (\n            <Fragment>\n                <ContentHeader>Merchant List </ContentHeader>\n\n                <Row>\n                    <Col sm=\"12\">\n                        <Card>\n                            <CardBody>\n                                {/*<CardTitle>Striped Rows</CardTitle>*/}\n                                <CustomTabs\n                                    TabContent1={<MerchantTable heading={heading} data={this.state.merchants} misc={{link: \"merchants\"}} />}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n\n            </Fragment>\n        );\n    }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}