interface IReactAuthConfig {
    fetchToken?: Function;
    fetchUser?: Function;
    isUserLogged?: Function;
}
declare class ReactAuth {
    private static jwtName;
    private static defaultConfig;
    private _guards;
    name: string;
    config: IReactAuthConfig;
    store: any;
    withAuth: Function;
    withUser: Function;
    withGuard: Function;
    constructor(name?: string, config?: IReactAuthConfig);
    create(name: string, config: IReactAuthConfig): ReactAuth;
    readonly jwtName: any;
    getToken(): string;
    setToken(token: any): this;
    deleteToken(): this;
    addGuard(name: any, fn: any): void;
    getGuard(name: any): any;
    login(data: any): Promise<any>;
    logout(): boolean;
    getUser(): Promise<any>;
}
declare const _default: ReactAuth;
export default _default;
