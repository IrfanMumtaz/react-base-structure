"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const hoc_manager_1 = __importDefault(require("hoc-manager"));
const react_1 = __importDefault(require("react"));
exports.default = instance => hoc_manager_1.default.create((Component, parameters) => {
    return class WithGuard extends react_1.default.Component {
        constructor() {
            super(...arguments);
            this.state = {};
        }
        componentDidMount() {
            this.unsubscribe = instance.store.subscribe(() => {
                const { user } = instance.store.getState();
                if (JSON.stringify(this.state) != JSON.stringify(user)) {
                    // @ts-ignore
                    this.setState(user);
                }
            });
        }
        componentWillUnmount() {
            this.unsubscribe && this.unsubscribe();
        }
        render() {
            const { user } = instance.store.getState();
            const next = (nextProps = {}) => react_1.default.createElement(Component, Object.assign({ user: user }, this.props, nextProps));
            let guard = parameters[0];
            if ('string' === typeof guard) {
                guard = instance.getGuard(guard);
            }
            return guard(user, this.props, next) || "Guard must return a valid react component";
        }
    };
}, {
    acceptParameters: true
});
//# sourceMappingURL=guard.js.map