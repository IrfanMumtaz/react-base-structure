{"version":3,"sources":["views/tickets/create.js","components/contentHead/contentHeader.js","app/config.js"],"names":["formSchema","Yup","shape","code","max","required","passenger_id","issuance","expiry","status","min","kin_name","kin_relation","kin_contact","pickup_add","dropoff_add","Create","state","auth","store","getState","authentication","Auth","login","Login","formValues","merchant_id","merchant","id","name","passenger","pickup","full_address","dropoff","passengers","STATUS","Array","alert","display","type","message","getPassengers","_callee","requestOptions","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","method","headers","Content-Type","Authorization","concat","_this","token","fetch","config","base_url","then","handleResponse","response","success","data","setState","stop","createTicket","_callee2","_context2","props","match","params","full","latitude","longitude","body","JSON","stringify","error","handleSubmit","e","handleChange","target","value","handleResetForm","document","getElementById","reset","this","generateCode","user","Date","getTime","text","parse","_this2","_this$state","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react__WEBPACK_IMPORTED_MODULE_7__","_components_contentHead_contentHeader__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","md","className","formik__WEBPACK_IMPORTED_MODULE_14__","initialValues","validationSchema","onSubmit","_ref3","setSubmitting","resetForm","_ref4","values","isSubmitting","errors","touched","react_feather__WEBPACK_IMPORTED_MODULE_12__","size","color","for","disabled","onChange","defaultValue","map","key","cnic","st","index","selected","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","undefined","children","process"],"mappings":"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","file":"static/js/32.35daca85.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport config from \"../../app/config\";\nimport {store} from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport {Alert, Button, Card, CardBody, CardTitle, Col, FormGroup, Input, Label, Row} from \"reactstrap\";\nimport {CheckSquare, FileText, Info, Mail, X, Home} from \"react-feather\";\nimport { useForm } from 'react-hook-form'\nimport {Field, Formik, Form} from \"formik\";\nimport * as Yup from \"yup\";\n\nconst formSchema = Yup.object().shape({\n    code: Yup.string().max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    passenger_id: Yup.number().required(\"Required\"),\n    issuance: Yup.date().required(\"Required\"),\n    expiry: Yup.date().required(\"Required\"),\n    status: Yup.number().max(3).min(0).required(\"Required\"),\n    kin_name: Yup.string().max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    kin_relation: Yup.string().max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    kin_contact: Yup.string().max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    pickup_add: Yup.string().max(190, \"Pickup address too long.\").required(\"Required\"),\n    dropoff_add: Yup.string().max(190, \"Dropoff address too long.\").required(\"Required\"),\n});\n\nclass Create extends Component {\n\n    state = {\n        auth: store.getState().authentication.Auth,\n        login: store.getState().authentication.Login,\n        formValues: {\n            code: '',\n            issuance: '',\n            expiry: '',\n            status: null,\n            kin_name: '',\n            kin_relation: '',\n            kin_contact: '',\n            merchant_id: null,\n            passenger_id: null,\n            pickup_add: '',\n            dropoff_add: '',\n            merchant:{\n                id: null,\n                name: ''\n            },\n            passenger:{\n                id: null,\n                name: ''\n            },\n            pickup: {\n                full_address: ''\n            },\n            dropoff: {\n                full_address: ''\n            }\n        },\n        passengers: [],\n        STATUS: new Array(\"Expired\", 'Active', \"Refunded\", \"Claimed\"),\n        alert: {\n            display: false,\n            type: \"success\",\n            message: \"\"\n        }\n    };\n\n    componentWillMount() {\n        this.getPassengers();\n        let { formValues } = this.state;\n        formValues.code = this.generateCode();\n        this.setState({formValues});\n    }\n\n    generateCode(){\n        return `TKT-${this.state.login.user.id}${new Date().getTime()}`;\n    }\n\n    getPassengers = async () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            }\n        };\n        fetch(`${config.base_url}v1/passenger`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const {passengers} = response.data;\n                    this.setState({passengers });\n                }\n                return response;\n            });\n    };\n\n    createTicket = async () => {\n        const { id } = this.props.match.params;\n        let { formValues } = this.state;\n        formValues.pickup = {\n            full: formValues.pickup_add,\n            latitude: 54.2211,\n            longitude: 54.2211,\n        };\n\n        formValues.dropoff = {\n            full: formValues.dropoff_add,\n            latitude: 54.2211,\n            longitude: 54.2211,\n        };\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            },\n            body: JSON.stringify(formValues)\n        };\n        fetch(`${config.base_url}v1/ticket`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                else{\n                    const alert = {\n                        type: \"danger\",\n                        message: response.error.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                return response;\n            });\n    };\n\n    handleResponse(response) {\n        return response.text().then(text => {\n            return text && JSON.parse(text);\n        });\n    }\n\n    handleSubmit = e => {\n        this.createTicket();\n    };\n\n    handleChange = e => {\n        const { formValues } = this.state;\n        formValues[e.target.name] = e.target.value;\n\n        this.setState({formValues})\n    };\n\n    handleResetForm = () => {\n        document.getElementById(\"form\").reset();\n    };\n\n    render() {\n        const {STATUS, formValues, passengers} = this.state;\n        return (\n            <Fragment>\n                <ContentHeader>Ticket Update </ContentHeader>\n\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardBody>\n                                <div className=\"px-3\">\n                                    <Formik\n                                        initialValues={formValues}\n                                        validationSchema={formSchema}\n                                        onSubmit={(data, {setSubmitting, resetForm}) => {\n                                            setSubmitting(true);\n                                            this.setState({formValues: data});\n                                            this.handleSubmit();\n                                            setSubmitting(false);\n                                            resetForm();\n                                        }}\n                                    >\n                                        {({ values, isSubmitting, errors, touched, handleChange}) => (\n                                            <Form id=\"form\">\n                                                <div className=\"form-body\">\n                                                    <h4 className=\"form-section\"><Home size={20} color=\"#212529\" /> Ticket Info</h4>\n                                                    <Row>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"name\">Ticket Code</Label>\n                                                                <Field name=\"code\" id=\"code\" value={values.code} disabled={true} className={`form-control ${errors.name && touched.name && 'is-invalid'}`}/>\n                                                                {errors.code && touched.code ? <div className=\"invalid-feedback\">{errors.code}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"passenger_id\">Passenger</Label>\n                                                                <select onChange={handleChange} id=\"passenger_id\" name=\"passenger_id\" className={`form-control ${errors.passenger_id && touched.passenger_id && 'is-invalid'}`}>\n                                                                    <option value=\"0\" defaultValue=\"\" disabled=\"\">Select Passenger</option>\n                                                                    {\n                                                                        passengers.map((passenger) => (\n                                                                            <option value={passenger.id} key={passenger.id} >{`${passenger.name} (${passenger.cnic})`}</option>\n                                                                        ))\n                                                                    }\n                                                                </select>\n                                                                {errors.passenger_id && touched.passenger_id ? <div className=\"invalid-feedback\">{errors.passenger_id}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col md=\"4\">\n                                                            <FormGroup>\n                                                                <Label for=\"issuance\">Issuance</Label>\n                                                                <Field id=\"issuance\" type=\"date\" name=\"issuance\" className={`form-control ${errors.issuance && touched.issuance && 'is-invalid'}`} />\n                                                                {errors.issuance && touched.issuance ? <div className=\"invalid-feedback\">{errors.issuance}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"4\">\n                                                            <FormGroup>\n                                                                <Label for=\"expiry\">Expiry</Label>\n                                                                <Field name=\"expiry\" type=\"date\" id=\"expiry\" className={`form-control ${errors.expiry && touched.expiry && 'is-invalid'}`} />\n                                                                {errors.expiry && touched.expiry ? <div className=\"invalid-feedback\">{errors.expiry}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"4\">\n                                                            <FormGroup>\n                                                                <Label for=\"status\">Status</Label>\n                                                                <select onChange={handleChange} id=\"status\" name=\"status\" className={`form-control ${errors.status && touched.status && 'is-invalid'}`}>\n                                                                    <option value=\"-1\" defaultValue=\"\" disabled=\"\">Select Status</option>\n                                                                    {\n                                                                        STATUS.map((st, index) => (\n                                                                            <option value={index} key={index} selected={index === 1}>{`${st}`}</option>\n                                                                        ))\n                                                                    }\n                                                                </select>\n                                                                {errors.passenger_id && touched.passenger_id ? <div className=\"invalid-feedback\">{errors.passenger_id}</div> : null}\n\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col md=\"4\">\n                                                            <FormGroup>\n                                                                <Label for=\"kin_name\">Kin Name</Label>\n                                                                <Field id=\"kin_name\" name=\"kin_name\" className={`form-control  ${errors.kin_name && touched.kin_name && 'is-invalid'}`} />\n                                                                {errors.kin_name && touched.kin_name ? <div className=\"invalid-feedback\">{errors.kin_name}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"4\">\n                                                            <FormGroup>\n                                                                <Label for=\"kin_relation\">Kin Relation</Label>\n                                                                <Field name=\"kin_relation\" id=\"kin_relation\" className={`form-control  ${errors.kin_relation && touched.kin_relation && 'is-invalid'}`} />\n                                                                {errors.kin_relation && touched.kin_relation ? <div className=\"invalid-feedback\">{errors.kin_relation}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"4\">\n                                                            <FormGroup>\n                                                                <Label for=\"kin_contact\">Kin Contact</Label>\n                                                                <Field name=\"kin_contact\" id=\"kin_contact\" className={`form-control  ${errors.kin_contact && touched.kin_contact && 'is-invalid'}`} />\n                                                                {errors.kin_contact && touched.kin_contact ? <div className=\"invalid-feedback\">{errors.kin_contact}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"pickup_add\">Pickup</Label>\n                                                                <Field id=\"pickup_add\" name=\"pickup_add\" className={`form-control  ${errors.pickup_add && touched.pickup_add && 'is-invalid'}`} />\n                                                                {errors.pickup_add && touched.pickup_add ? <div className=\"invalid-feedback\">{errors.pickup_add}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"dropoff_add\">Dropoff</Label>\n                                                                <Field name=\"dropoff_add\" id=\"dropoff_add\" className={`form-control  ${errors.dropoff_add && touched.dropoff_add && 'is-invalid'}`} />\n                                                                {errors.dropoff_add && touched.dropoff_add ? <div className=\"invalid-feedback\">{errors.dropoff_add}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n\n                                                </div>\n\n                                                <div className=\"form-actions\">\n                                                    <Button color=\"warning\" className=\"mr-1\" type=\"submit\">\n                                                        <CheckSquare size={16} color=\"#FFF\" /> Cancel\n                                                    </Button>\n\n                                                    <Button color=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                                                        <CheckSquare size={16} color=\"#FFF\" /> Save\n                                                    </Button>\n                                                    {   this.state.alert.display &&\n                                                    <Alert color={this.state.alert.type} >\n                                                        {this.state.alert.message}\n                                                    </Alert>\n                                                    }\n                                                </div>\n                                            </Form>\n                                        )}\n                                    </Formik>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nexport default Create;\n","import React from \"react\";\n\nconst ContentHeader = props => {\n  const {className} = props;\n   return (\n      <div\n         className={`content-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentHeader;\n","const config = {\n    base_url: process.env.REACT_APP_API_URL\n}\n\nexport default config;"],"sourceRoot":""}