{"version":3,"sources":["views/vehicles/create.js","components/contentHead/contentHeader.js","app/config.js"],"names":["formSchema","Yup","shape","name","max","required","type","make","model","registration","color","nullable","chassis","engine","year","Create","state","auth","store","getState","authentication","Auth","formValues","formData","_this","getYears","alert","display","message","createVehicle","_callee","requestOptions","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","method","headers","Content-Type","Authorization","concat","token","body","JSON","stringify","fetch","config","base_url","then","handleResponse","response","success","setState","error","stop","handleSubmit","e","handleChange","target","value","handleResetForm","document","getElementById","reset","i","Date","getFullYear","push","text","parse","_this2","this","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react__WEBPACK_IMPORTED_MODULE_7__","_components_contentHead_contentHeader__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","md","className","formik__WEBPACK_IMPORTED_MODULE_15__","initialValues","validationSchema","onSubmit","data","_ref2","setSubmitting","resetForm","_ref3","values","isSubmitting","errors","touched","id","react_feather__WEBPACK_IMPORTED_MODULE_13__","size","for","onChange","defaultValue","disabled","map","y","key","onClick","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","props","undefined","children","process"],"mappings":"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","file":"static/js/16.04d2eb5f.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport config from \"../../app/config\";\nimport {store} from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport {Alert, Button, Card, CardBody, CardTitle, Col, FormGroup, Input, Label, Row} from \"reactstrap\";\nimport {CheckSquare, FileText, Info, Mail, X, Map} from \"react-feather\";\nimport { useForm } from 'react-hook-form'\nimport {Field, Formik, Form} from \"formik\";\nimport * as Yup from \"yup\";\n\nconst formSchema = Yup.object().shape({\n    name: Yup.string()\n        .max(50, \"Too long, max 50 characters\")\n        .required(\"Required\"),\n    type: Yup.string()\n        .max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    make: Yup.string()\n        .max(50, \"Too long, max 50 characters\")\n        .required(\"Required\"),\n    model: Yup.string()\n        .max(50, \"Too long, max 50 characters\")\n        .required(\"Required\"),\n    registration: Yup.string()\n        .max(50, \"Too long, max 50 characters\")\n        .required(\"Required\"),\n    color: Yup.string()\n        .max(50, \"Too long, max 50 characters\").nullable(),\n    chassis: Yup.string()\n        .max(50, \"Too long, max 50 characters\").nullable(),\n    engine: Yup.string()\n        .max(50, \"Too long, max 50 characters\").nullable(),\n    year: Yup.number()\n        .nullable().required(\"Required\")\n});\n\nclass Create extends Component {\n\n    state = {\n        auth: store.getState().authentication.Auth,\n        formValues: {\n            name: '',\n            type: '',\n            make: '',\n            model: '',\n            year: null,\n            registration: '',\n            color: null,\n            chassis: null,\n            engine: null,\n        },\n        formData: {\n            year: this.getYears(),\n        },\n        alert: {\n            display: false,\n            type: \"success\",\n            message: \"\"\n        }\n    };\n\n    getYears(){\n        const year = [];\n        const date = new Date();\n        for (let i = date.getFullYear(); i >= 1980; i--){\n            year.push(i)\n        }\n\n        return year;\n    }\n\n    createVehicle = async () => {\n        const { formValues } = this.state;\n        const requestOptions = {\n            method: 'Post',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            },\n            body: JSON.stringify(formValues)\n        };\n        fetch(`${config.base_url}v1/vehicle`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                    // this.handleResetForm();\n                }\n                else{\n                    const alert = {\n                        type: \"danger\",\n                        message: response.error.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                return response;\n            });\n    };\n\n    handleResponse(response) {\n        return response.text().then(text => {\n            const data = text && JSON.parse(text);\n            return data;\n        });\n    }\n\n    handleSubmit = e => {\n        this.createVehicle();\n    };\n\n    handleChange = e => {\n        const { formValues } = this.state;\n        formValues[e.target.name] = e.target.value;\n\n        this.setState({formValues})\n    };\n\n    handleResetForm = () => {\n        document.getElementById(\"vehicleForm\").reset();\n    };\n\n    render() {\n        const {formData} = this.state;\n        return (\n            <Fragment>\n                <ContentHeader>Vehicles Add </ContentHeader>\n\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardBody>\n                                <div className=\"px-3\">\n                                    <Formik\n                                        initialValues={this.state.formValues}\n                                        validationSchema={formSchema}\n                                        onSubmit={(data, {setSubmitting, resetForm}) => {\n                                            setSubmitting(true);\n                                            this.setState({formValues: data});\n                                            this.handleSubmit();\n                                            setSubmitting(false);\n                                            resetForm();\n                                        }}\n                                    >\n                                        {({ values, isSubmitting, errors, touched, handleChange}) => (\n                                            <Form id=\"vehicleForm\">\n                                        <div className=\"form-body\">\n                                            <h4 className=\"form-section\"><Map size={20} color=\"#212529\" /> Vehicle Info</h4>\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"name\">Vehicle Name</Label>\n                                                        <Field name=\"name\" id=\"name\" className={`form-control ${errors.name && touched.name && 'is-invalid'}`}/>\n                                                        {errors.name && touched.name ? <div className=\"invalid-feedback\">{errors.name}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"type\">Vehicle Type</Label>\n                                                        <select onChange={handleChange} id=\"type\" name=\"type\" className={`form-control ${errors.type && touched.type && 'is-invalid'}`}>\n                                                            <option value=\"0\" defaultValue=\"\" disabled=\"\">Select Type</option>\n                                                            <option value=\"Bus\">Bus</option>\n                                                            <option value=\"Car\">Car</option>\n                                                            <option value=\"Motor Bike\">Motor Bike</option>\n                                                        </select>\n                                                        {errors.type && touched.type ? <div className=\"invalid-feedback\">{errors.type}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"make\">Make</Label>\n                                                        <Field id=\"make\"   name=\"make\" className={`form-control ${errors.make && touched.make && 'is-invalid'}`} />\n                                                        {errors.make && touched.make ? <div className=\"invalid-feedback\">{errors.make}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"model\">Model</Label>\n                                                        <Field name=\"model\" id=\"model\" className={`form-control ${errors.model && touched.model && 'is-invalid'}`} />\n                                                        {errors.model && touched.model ? <div className=\"invalid-feedback\">{errors.model}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"year\">Year</Label>\n                                                            <select onChange={handleChange} id=\"year\" name=\"year\" className={`form-control ${errors.year && touched.year && 'is-invalid'}`}>\n                                                                <option value=\"0\" defaultValue=\"\" disabled=\"\">Select Year</option>\n                                                                {\n                                                                    formData.year.map((y, i) => (\n                                                                        <option key={i} value={y}>{y}</option>\n                                                                    ))\n                                                                }\n                                                            </select>\n                                                            {errors.year && touched.year ? <div className=\"invalid-feedback\">{errors.year}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"registration\">Registraion</Label>\n                                                        <Field id=\"registration\"   name=\"registration\" className={`form-control ${errors.registration && touched.registration && 'is-invalid'}`}/>\n                                                        {errors.registration && touched.registration ? <div className=\"invalid-feedback\">{errors.registration}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n                                            <Row>\n                                                <Col md=\"4\">\n                                                    <FormGroup>\n                                                        <Label for=\"color\">Color</Label>\n                                                        <Field name=\"color\" id=\"color\" value={values.color} className={`form-control ${errors.color && touched.color && 'is-invalid'}`} />\n                                                        {errors.color && touched.color ? <div className=\"invalid-feedback\">{errors.color}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"4\">\n                                                    <FormGroup>\n                                                        <Label for=\"chassis\">Chassis</Label>\n                                                        <Field name=\"chassis\" id=\"chassis\" value={values.chassis} className={`form-control ${errors.chassis && touched.chassis && 'is-invalid'}`} />\n                                                        {errors.chassis && touched.chassis ? <div className=\"invalid-feedback\">{errors.chassis}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n\n                                                <Col md=\"4\">\n                                                    <FormGroup>\n                                                        <Label for=\"engine\">Engine</Label>\n                                                        <Field name=\"engine\" id=\"engine\" value={values.engine} className={`form-control ${errors.engine && touched.engine && 'is-invalid'}`} />\n                                                        {errors.engine && touched.engine ? <div className=\"invalid-feedback\">{errors.engine}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n\n                                        </div>\n\n                                        <div className=\"form-actions\">\n                                            <Button color=\"warning\" className=\"mr-1\" onClick={this.handleResetForm}>\n                                                <X size={16} color=\"#FFF\" /> Cancel\n                                            </Button>\n                                            <Button color=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                                                <CheckSquare size={16} color=\"#FFF\" /> Save\n                                            </Button>\n                                            {   this.state.alert.display &&\n                                                <Alert color={this.state.alert.type} >\n                                                    {this.state.alert.message}\n                                                </Alert>\n                                            }\n\n\n                                        </div>\n                                    </Form>\n                                        )}\n                                    </Formik>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nexport default Create;\n","import React from \"react\";\n\nconst ContentHeader = props => {\n  const {className} = props;\n   return (\n      <div\n         className={`content-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentHeader;\n","const config = {\n    base_url: process.env.REACT_APP_API_URL\n}\n\nexport default config;"],"sourceRoot":""}