{"version":3,"sources":["views/merchants/edit.js","components/contentHead/contentHeader.js","app/config.js"],"names":["formSchema","Yup","shape","name","max","required","father_name","cnic","nullable","gender","dob","religion","nationality","joining","phone","email","s_phone","s_email","full_address","latitude","longitude","Edit","props","_this","Object","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","auth","store","getState","authentication","Auth","formValues","formData","alert","display","type","message","getMerchant","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","id","requestOptions","wrap","_context","prev","next","match","params","method","headers","Content-Type","Authorization","concat","token","fetch","config","base_url","then","handleResponse","response","success","data","merchant","primary_contact","secondary_contacts","address","setState","stop","updateMerchant","_callee2","_context2","contact","full","city","console","log","body","JSON","stringify","error","handleSubmit","e","handleChange","target","value","handleResetForm","document","getElementById","reset","text","parse","_this2","_this$state","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react__WEBPACK_IMPORTED_MODULE_7__","_components_contentHead_contentHeader__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","md","className","formik__WEBPACK_IMPORTED_MODULE_14__","enableReinitialize","initialValues","validationSchema","onSubmit","_ref3","setSubmitting","resetForm","_ref4","values","isSubmitting","errors","touched","react_feather__WEBPACK_IMPORTED_MODULE_12__","size","color","for","onChange","defaultValue","disabled","selected","model","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","undefined","children","process"],"mappings":"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","file":"static/js/22.c595b0e0.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport config from \"../../app/config\";\nimport {store} from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport {Alert, Button, Card, CardBody, CardTitle, Col, FormGroup, Input, Label, Row} from \"reactstrap\";\nimport {CheckSquare, FileText, Info, Mail, X, Map, User, Phone, Home} from \"react-feather\";\nimport { useForm } from 'react-hook-form'\nimport {Field, Formik, Form} from \"formik\";\nimport * as Yup from \"yup\";\n\nconst formSchema = Yup.object().shape({\n    name: Yup.string().max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    father_name: Yup.string().max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    cnic: Yup.number().required(\"Required\").nullable(),\n    gender: Yup.string().max(1, \"Something odd happened, can not process further\").required(\"Required\"),\n    dob: Yup.date().required(\"Required\"),\n    religion: Yup.string().max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    nationality: Yup.string().max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    joining: Yup.date().required(\"Required\"),\n    phone: Yup.number().required(\"Required\"),\n    email: Yup.string().email().required(\"Required\"),\n    s_phone: Yup.number().nullable(),\n    s_email: Yup.string().email().nullable(),\n    full_address: Yup.string().required(\"Required\").max(190, \"Address too long\"),\n    latitude: Yup.number().required(\"Required\").nullable(),\n    longitude: Yup.number().required(\"Required\").nullable(),\n});\n\nclass Edit extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        auth: store.getState().authentication.Auth,\n        formValues: {\n            name: '',\n            father_name: '',\n            cnic: null,\n            gender: 'M',\n            religion: '',\n            nationality: '',\n            dob: '',\n            joining: '',\n            phone: null,\n            email: '',\n            s_phone: null,\n            s_email: null,\n            full_address: '',\n            latitude: 54.2211,\n            longitude: 54.2211\n        },\n        formData: {\n        },\n        alert: {\n            display: false,\n            type: \"success\",\n            message: \"\"\n        }\n    };\n\n    componentWillMount() {\n        this.getMerchant();\n    }\n\n    getMerchant = async () => {\n        const { id } = this.props.match.params;\n        const { formValues } = this.state;\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            }\n        };\n        fetch(`${config.base_url}v1/merchant/${id}`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    let formValues = response.data.merchant;\n                    formValues.phone = formValues.primary_contact.phone;\n                    formValues.email = formValues.primary_contact.email;\n                    formValues.s_phone = (formValues.secondary_contacts[0]) ? formValues.secondary_contacts[0].s_phone : null;\n                    formValues.s_email = (formValues.secondary_contacts[0]) ? formValues.secondary_contacts[0].s_email : null;\n                    formValues.full_address = formValues.address.full_address;\n                    formValues.latitude = 54.2211;\n                    formValues.longitude = 54.2211;\n                    this.setState({formValues });\n                }\n                return response;\n            });\n    };\n\n    updateMerchant = async () => {\n        const {id} = this.props.match.params\n        let { formValues } = this.state;\n        formValues.contact = {\n            phone: formValues.phone,\n            email: formValues.email,\n            s_phone: formValues.s_phone && null,\n            s_email: formValues.s_email && null,\n        };\n        formValues.address = {\n            full: formValues.full_address,\n            latitude: formValues.latitude,\n            longitude: formValues.longitude,\n            city: 1,\n            state: 1\n        };\n        console.log(formValues)\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            },\n            body: JSON.stringify(formValues)\n        };\n        fetch(`${config.base_url}v1/merchant/${id}`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                else{\n                    const alert = {\n                        type: \"danger\",\n                        message: response.error.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                return response;\n            });\n    };\n\n    handleResponse(response) {\n        return response.text().then(text => {\n            return text && JSON.parse(text);\n        });\n    }\n\n    handleSubmit = e => {\n        this.updateMerchant();\n    };\n\n    handleChange = e => {\n        const { formValues } = this.state;\n        formValues[e.target.name] = e.target.value;\n\n        this.setState({formValues})\n    };\n\n    handleResetForm = () => {\n        document.getElementById(\"merchantForm\").reset();\n    };\n\n    render() {\n        const {formData, formValues} = this.state;\n        return (\n            <Fragment>\n                <ContentHeader>Merchant Update </ContentHeader>\n\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardBody>\n                                <div className=\"px-3\">\n                                    <Formik\n                                        enableReinitialize={true}\n                                        initialValues={formValues}\n                                        validationSchema={formSchema}\n                                        onSubmit={(data, {setSubmitting, resetForm}) => {\n                                            setSubmitting(true);\n                                            this.setState({formValues: data});\n                                            this.handleSubmit();\n                                            setSubmitting(false);\n                                            resetForm();\n                                        }}\n                                    >\n                                        {({ values, isSubmitting, errors, touched, handleChange}) => (\n                                            <Form id=\"merchantForm\">\n                                                <div className=\"form-body\">\n                                                    <h4 className=\"form-section\"><User size={20} color=\"#212529\" /> Merchant Info</h4>\n                                                    <Row>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"name\">Merchant Name</Label>\n                                                                <Field name=\"name\" id=\"name\" value={values.name} className={`form-control ${errors.name && touched.name && 'is-invalid'}`}/>\n                                                                {errors.name && touched.name ? <div className=\"invalid-feedback\">{errors.name}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"father_name\">Merchant Father Name</Label>\n                                                                <Field name=\"father_name\" id=\"father_name\" value={values.father_name} className={`form-control ${errors.father_name && touched.father_name && 'is-invalid'}`}/>\n                                                                {errors.father_name && touched.father_name ? <div className=\"invalid-feedback\">{errors.father_name}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"cnic\">CNIC</Label>\n                                                                <Field id=\"cnic\"   name=\"cnic\" value={values.cnic} className={`form-control ${errors.cnic && touched.cnic && 'is-invalid'}`} />\n                                                                {errors.cnic && touched.cnic ? <div className=\"invalid-feedback\">{errors.cnic}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"model\">Gender</Label>\n                                                                <select onChange={handleChange} id=\"type\" name=\"type\" className={`form-control ${errors.type && touched.type && 'is-invalid'}`}>\n                                                                    <option value=\"\" defaultValue=\"\" disabled=\"\">Select Gender</option>\n                                                                    <option value=\"M\" selected={values.gender === 'M'}>Male</option>\n                                                                    <option value=\"F\" selected={values.gender === 'F'}>Female</option>\n                                                                </select>\n                                                                {errors.model && touched.model ? <div className=\"invalid-feedback\">{errors.model}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"religion\">Religion</Label>\n                                                                <Field name=\"religion\" id=\"religion\" value={values.religion} className={`form-control ${errors.religion && touched.religion && 'is-invalid'}`} />\n                                                                {errors.religion && touched.religion ? <div className=\"invalid-feedback\">{errors.religion}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"nationality\">Nationality</Label>\n                                                                <Field name=\"nationality\" id=\"nationality\" value={values.nationality} className={`form-control ${errors.nationality && touched.nationality && 'is-invalid'}`} />\n                                                                {errors.nationality && touched.nationality ? <div className=\"invalid-feedback\">{errors.nationality}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"dob\">Date of Birth</Label>\n                                                                <Field type=\"date\" name=\"dob\" id=\"dob\" value={values.dob} className={`form-control ${errors.dob && touched.dob && 'is-invalid'}`} />\n                                                                {errors.dob && touched.dob ? <div className=\"invalid-feedback\">{errors.dob}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"joining\">Date of Joining</Label>\n                                                                <Field type=\"date\" name=\"joining\" id=\"joining\" value={values.joining} className={`form-control ${errors.joining && touched.joining && 'is-invalid'}`} />\n                                                                {errors.joining && touched.joining ? <div className=\"invalid-feedback\">{errors.joining}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n                                                    <h4 className=\"form-section\"><Phone size={20} color=\"#212529\" /> Contact Info</h4>\n                                                    <Row>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"phone\">Primary Phone</Label>\n                                                                <Field name=\"phone\" id=\"phone\" value={values.phone} className={`form-control ${errors.phone && touched.phone && 'is-invalid'}`} />\n                                                                {errors.phone && touched.phone ? <div className=\"invalid-feedback\">{errors.phone}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"email\">Primary Email</Label>\n                                                                <Field name=\"email\" id=\"email\" value={values.email} className={`form-control ${errors.email && touched.email && 'is-invalid'}`} />\n                                                                {errors.email && touched.email ? <div className=\"invalid-feedback\">{errors.email}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"s_phone\">Secondary Phone</Label>\n                                                                <Field name=\"s_phone\" id=\"s_phone\" value={values.s_phone} className={`form-control ${errors.s_phone && touched.s_phone && 'is-invalid'}`} />\n                                                                {errors.s_phone && touched.s_phone ? <div className=\"invalid-feedback\">{errors.s_phone}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"6\">\n                                                            <FormGroup>\n                                                                <Label for=\"s_email\">Secondary Email</Label>\n                                                                <Field name=\"s_email\" id=\"s_email\" value={values.s_email} className={`form-control ${errors.s_email && touched.s_email && 'is-invalid'}`} />\n                                                                {errors.s_email && touched.s_email ? <div className=\"invalid-feedback\">{errors.s_email}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <h4 className=\"form-section\"><Home size={20} color=\"#212529\" /> Address Info</h4>\n\n                                                    <Row>\n                                                        <Col md=\"12\">\n                                                            <FormGroup>\n                                                                <Label for=\"full_address\">Address</Label>\n                                                                <Field name=\"full_address\" id=\"full_address\" value={values.full_address} className={`form-control ${errors.full_address && touched.full_address && 'is-invalid'}`} />\n                                                                {errors.full_address && touched.full_address ? <div className=\"invalid-feedback\">{errors.full_address}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n\n\n\n                                                </div>\n\n                                                <div className=\"form-actions\">\n                                                    <Button color=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                                                        <CheckSquare size={16} color=\"#FFF\" /> Save\n                                                    </Button>\n\n\n                                                </div>\n                                                {   this.state.alert.display &&\n                                                <Alert color={this.state.alert.type} >\n                                                    {this.state.alert.message}\n                                                </Alert>\n                                                }\n                                            </Form>\n                                        )}\n                                    </Formik>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nexport default Edit;\n","import React from \"react\";\n\nconst ContentHeader = props => {\n  const {className} = props;\n   return (\n      <div\n         className={`content-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentHeader;\n","const config = {\n    base_url: process.env.REACT_APP_API_URL\n}\n\nexport default config;"],"sourceRoot":""}