{"version":3,"sources":["views/access-control-list/create.js","components/contentHead/contentHeader.js","app/config.js"],"names":["formSchema","Yup","shape","name","required","max","Create","_this","Object","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","getPermissions","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","requestOptions","wrap","_context","prev","next","state","permissions","method","headers","Content-Type","Authorization","concat","auth","token","fetch","config","base_url","then","handleResponse","response","success","message","data","statePermission","map","permission","push","value","id","label","setState","stop","createRole","_callee2","_this$state","formValues","multivalues","_context2","val","body","JSON","stringify","alert","type","display","error","handleSubmit","e","handleMultiChange","option","handleResetForm","document","getElementById","reset","store","getState","authentication","Auth","text","parse","find","p","addPermission","indexOf","_this2","_this$state2","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react__WEBPACK_IMPORTED_MODULE_7__","_components_contentHead_contentHeader__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","md","className","formik__WEBPACK_IMPORTED_MODULE_13__","initialValues","enableReinitialize","validationSchema","onSubmit","_ref3","setSubmitting","_ref4","values","isSubmitting","errors","touched","handleChange","react_feather__WEBPACK_IMPORTED_MODULE_12__","size","color","for","react_select__WEBPACK_IMPORTED_MODULE_15__","options","onChange","isMulti","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","props","undefined","children","process"],"mappings":"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","file":"static/js/12.4c67317e.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport config from \"../../app/config\";\nimport {store} from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport {Alert, Button, Card, CardBody, CardTitle, Col, FormGroup, Input, Label, Row} from \"reactstrap\";\nimport {CheckSquare, FileText, Info, Mail, X, Map} from \"react-feather\";\nimport {Field, Formik, Form} from \"formik\";\nimport * as Yup from \"yup\";\nimport Select from 'react-select';\nimport \"react-select/dist/react-select\";\n\nconst formSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required\").max(50, \"Role name is too long.\")\n});\n\nclass Create extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            auth: store.getState().authentication.Auth,\n            formValues: {\n                name: '',\n                permissions: []\n            },\n            multivalues: [\n            ],\n            permissions: [],\n            alert: {\n                display: false,\n                type: \"success\",\n                message: \"\"\n            }\n        };\n    }\n\n\n\n\n    componentWillMount() {\n        this.getPermissions();\n    }\n\n    getPermissions = async () => {\n        const { permissions } = this.state;\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            }\n        };\n        fetch(`${config.base_url}v1/acl/permission`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    const {permissions} = response.data;\n                    let statePermission = [];\n                    permissions.map( permission => (\n                        statePermission.push({\n                            value: permission.id,\n                            label: permission.name\n                        })\n                    ));\n                    this.setState({permissions: statePermission });\n                }\n                return response;\n            });\n    };\n\n\n    createRole = async () => {\n        let { formValues, multivalues } = this.state;\n        formValues.permissions = [];\n        multivalues.map(val => {\n            formValues.permissions.push(val.value);\n        });\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            },\n            body: JSON.stringify(formValues)\n        };\n        fetch(`${config.base_url}v1/acl/role`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                else{\n                    const alert = {\n                        type: \"danger\",\n                        message: response.error.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                return response;\n            });\n    };\n\n    handleResponse(response) {\n        return response.text().then(text => {\n            return text && JSON.parse(text);\n        });\n    }\n\n    handleSubmit = e => {\n        this.createRole();\n    };\n\n    handleMultiChange = option => {\n        this.setState({multivalues: option});\n    };\n\n    handleResetForm = () => {\n        document.getElementById(\"roleForm\").reset();\n    };\n\n    findPermission(id){\n        let {formValues} = this.state;\n        let obj = formValues.permissions.find(p => p.id === id);\n        if(obj) {\n            if(formValues.addPermission.indexOf(id === -1)){\n                formValues.addPermission.push(id);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n        const {permissions, formValues} = this.state;\n        return (\n            <Fragment>\n                <ContentHeader>Vehicles Update </ContentHeader>\n\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardBody>\n                                <div className=\"px-3\">\n                                    <Formik\n                                        initialValues={this.state.formValues}\n                                        enableReinitialize={true}\n                                        validationSchema={formSchema}\n                                        onSubmit={(data, {setSubmitting}) => {\n                                            setSubmitting(true);\n                                            this.setState({formValues: data});\n                                            this.handleSubmit();\n                                            setSubmitting(false);\n                                        }}\n                                    >\n                                        {({ values, isSubmitting, errors, touched, handleChange}) => (\n                                            <Form id=\"roleForm\">\n                                                <div className=\"form-body\">\n                                                    <h4 className=\"form-section\"><Map size={20} color=\"#212529\" /> Role Info</h4>\n                                                    <Row>\n                                                        <Col md=\"12\">\n                                                            <FormGroup>\n                                                                <Label for=\"name\">Role Name</Label>\n                                                                <Field name=\"name\" id=\"name\" className={`form-control ${errors.name && touched.name && 'is-invalid'}`}/>\n                                                                {errors.name && touched.name ? <div className=\"invalid-feedback\">{errors.name}</div> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col md=\"12\">\n                                                            <Select\n                                                                options = {permissions}\n                                                                value={this.state.multivalues}\n                                                                onChange={this.handleMultiChange}\n                                                                isMulti={true}  />\n                                                        </Col>\n                                                    </Row>\n\n                                                </div>\n\n                                                <div className=\"form-actions\">\n                                                    <Button color=\"primary\" type=\"submit\">\n                                                        <CheckSquare size={16} color=\"#FFF\" /> Save\n                                                    </Button>\n                                                    {   this.state.alert.display &&\n                                                    <Alert color={this.state.alert.type} >\n                                                        {this.state.alert.message}\n                                                    </Alert>\n                                                    }\n\n\n                                                </div>\n                                            </Form>\n\n                                        )}\n                                    </Formik>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nexport default Create;\n","import React from \"react\";\n\nconst ContentHeader = props => {\n  const {className} = props;\n   return (\n      <div\n         className={`content-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentHeader;\n","const config = {\n    base_url: process.env.REACT_APP_API_URL\n}\n\nexport default config;"],"sourceRoot":""}