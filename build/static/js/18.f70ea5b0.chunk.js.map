{"version":3,"sources":["views/vehicles/edit.js","components/contentHead/contentHeader.js","app/config.js"],"names":["formSchema","Yup","shape","name","max","required","type","make","model","registration","color","nullable","chassis","engine","year","Create","props","_this","Object","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","auth","store","getState","authentication","Auth","formValues","formData","getYears","alert","display","message","getVehicle","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","id","requestOptions","wrap","_context","prev","next","match","params","method","headers","Content-Type","Authorization","concat","token","fetch","config","base_url","then","handleResponse","response","success","data","vehicle","setState","error","stop","updateVehicle","_callee2","_context2","body","JSON","stringify","handleSubmit","e","handleChange","target","value","handleResetForm","document","getElementById","reset","i","Date","getFullYear","push","text","parse","_this2","_this$state","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react__WEBPACK_IMPORTED_MODULE_7__","_components_contentHead_contentHeader__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","md","className","formik__WEBPACK_IMPORTED_MODULE_14__","enableReinitialize","initialValues","validationSchema","onSubmit","_ref3","setSubmitting","resetForm","_ref4","values","isSubmitting","errors","touched","react_feather__WEBPACK_IMPORTED_MODULE_12__","size","for","onChange","defaultValue","disabled","selected","map","y","key","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","undefined","children","process"],"mappings":"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","file":"static/js/18.f70ea5b0.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport config from \"../../app/config\";\nimport {store} from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport {Alert, Button, Card, CardBody, CardTitle, Col, FormGroup, Input, Label, Row} from \"reactstrap\";\nimport {CheckSquare, FileText, Info, Mail, X, Map} from \"react-feather\";\nimport { useForm } from 'react-hook-form'\nimport {Field, Formik, Form} from \"formik\";\nimport * as Yup from \"yup\";\n\nconst formSchema = Yup.object().shape({\n    name: Yup.string()\n        .max(50, \"Too long, max 50 characters\")\n        .required(\"Required\"),\n    type: Yup.string()\n        .max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    make: Yup.string()\n        .max(50, \"Too long, max 50 characters\")\n        .required(\"Required\"),\n    model: Yup.string()\n        .max(50, \"Too long, max 50 characters\")\n        .required(\"Required\"),\n    registration: Yup.string()\n        .max(50, \"Too long, max 50 characters\")\n        .required(\"Required\"),\n    color: Yup.string()\n        .max(50, \"Too long, max 50 characters\").nullable(),\n    chassis: Yup.string()\n        .max(50, \"Too long, max 50 characters\").nullable(),\n    engine: Yup.string()\n        .max(50, \"Too long, max 50 characters\").nullable(),\n    year: Yup.number()\n        .nullable().required(\"Required\")\n});\n\nclass Create extends Component {\n\n    constructor(props) {\n        super(props);\n        this.getVehicle();\n    }\n    state = {\n        auth: store.getState().authentication.Auth,\n        formValues: {\n            name: '',\n            type: '',\n            make: '',\n            model: '',\n            year: null,\n            registration: '',\n            color: null,\n            chassis: null,\n            engine: null,\n        },\n        formData: {\n            year: this.getYears(),\n        },\n        alert: {\n            display: false,\n            type: \"success\",\n            message: \"\"\n        }\n    };\n\n\n\n    getYears(){\n        const year = [];\n        const date = new Date();\n        for (let i = date.getFullYear(); i >= 1980; i--){\n            year.push(i)\n        }\n\n        return year;\n    }\n\n    componentWillMount() {\n        this.getVehicle();\n    }\n\n    getVehicle = async () => {\n        const { id } = this.props.match.params;\n        const { formValues } = this.state;\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            }\n        };\n        fetch(`${config.base_url}v1/vehicle/${id}`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    const formValues = response.data.vehicle;\n                    this.setState({formValues });\n                }\n                else{\n                    const alert = {\n                        type: \"danger\",\n                        message: response.error.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                return response;\n            });\n    };\n\n    updateVehicle = async () => {\n        const { id } = this.props.match.params;\n        const { formValues } = this.state;\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            },\n            body: JSON.stringify(formValues)\n        };\n        fetch(`${config.base_url}v1/vehicle/${id}`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                else{\n                    const alert = {\n                        type: \"danger\",\n                        message: response.error.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                return response;\n            });\n    };\n\n    handleResponse(response) {\n        return response.text().then(text => {\n            return text && JSON.parse(text);\n        });\n    }\n\n    handleSubmit = e => {\n        this.updateVehicle();\n    };\n\n    handleChange = e => {\n        const { formValues } = this.state;\n        formValues[e.target.name] = e.target.value;\n\n        this.setState({formValues})\n    };\n\n    handleResetForm = () => {\n        document.getElementById(\"vehicleForm\").reset();\n    };\n\n    render() {\n        const {formData, formValues} = this.state;\n        return (\n            <Fragment>\n                <ContentHeader>Vehicles Update </ContentHeader>\n\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardBody>\n                                <div className=\"px-3\">\n                                    <Formik\n                                        enableReinitialize={true}\n                                        initialValues={formValues}\n                                        validationSchema={formSchema}\n                                        onSubmit={(data, {setSubmitting, resetForm}) => {\n                                            setSubmitting(true);\n                                            this.setState({formValues: data});\n                                            this.handleSubmit();\n                                            setSubmitting(false);\n                                            resetForm();\n                                        }}\n                                    >\n                                        {({ values, isSubmitting, errors, touched, handleChange}) => (\n                                            <Form id=\"vehicleForm\">\n                                        <div className=\"form-body\">\n                                            <h4 className=\"form-section\"><Map size={20} color=\"#212529\" /> Vehicle Info</h4>\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"name\">Vehicle Name</Label>\n                                                        <Field name=\"name\" id=\"name\" value={values.name} className={`form-control ${errors.name && touched.name && 'is-invalid'}`}/>\n                                                        {errors.name && touched.name ? <div className=\"invalid-feedback\">{errors.name}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"type\">Vehicle Type</Label>\n                                                        <select onChange={handleChange} id=\"type\" name=\"type\" className={`form-control ${errors.type && touched.type && 'is-invalid'}`}>\n                                                            <option value=\"0\" defaultValue=\"\" disabled=\"\">Select Type</option>\n                                                            <option value=\"Bus\" selected={formValues.type === \"Bus\"}>Bus</option>\n                                                            <option value=\"Car\" selected={formValues.type === \"Car\"}>Car</option>\n                                                            <option value=\"Motor Bike\" selected={formValues.type === \"Motor Bike\"}>Motor Bike</option>\n                                                        </select>\n                                                        {errors.type && touched.type ? <div className=\"invalid-feedback\">{errors.type}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"make\">Make</Label>\n                                                        <Field id=\"make\" value={values.make}  name=\"make\" className={`form-control ${errors.make && touched.make && 'is-invalid'}`} />\n                                                        {errors.make && touched.make ? <div className=\"invalid-feedback\">{errors.make}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"model\">Model</Label>\n                                                        <Field name=\"model\" value={values.model} id=\"model\" className={`form-control ${errors.model && touched.model && 'is-invalid'}`} />\n                                                        {errors.model && touched.model ? <div className=\"invalid-feedback\">{errors.model}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"year\">Year</Label>\n                                                            <select onChange={handleChange} id=\"year\" name=\"year\" className={`form-control ${errors.year && touched.year && 'is-invalid'}`}>\n                                                                <option value=\"0\" defaultValue=\"\" disabled=\"\">Select Year</option>\n                                                                {\n                                                                    formData.year.map((y, i) => (\n                                                                        <option key={i} value={y} selected={values.year === y}>{y}</option>\n                                                                    ))\n                                                                }\n                                                            </select>\n                                                            {errors.year && touched.year ? <div className=\"invalid-feedback\">{errors.year}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"registration\">Registraion</Label>\n                                                        <Field id=\"registration\" value={values.registration} name=\"registration\" className={`form-control ${errors.registration && touched.registration && 'is-invalid'}`}/>\n                                                        {errors.registration && touched.registration ? <div className=\"invalid-feedback\">{errors.registration}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n                                            <Row>\n                                                <Col md=\"4\">\n                                                    <FormGroup>\n                                                        <Label for=\"color\">Color</Label>\n                                                        <Field name=\"color\" id=\"color\" value={values.color} className={`form-control ${errors.color && touched.color && 'is-invalid'}`} />\n                                                        {errors.color && touched.color ? <div className=\"invalid-feedback\">{errors.color}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"4\">\n                                                    <FormGroup>\n                                                        <Label for=\"chassis\">Chassis</Label>\n                                                        <Field name=\"chassis\" id=\"chassis\" value={values.chassis} className={`form-control ${errors.chassis && touched.chassis && 'is-invalid'}`} />\n                                                        {errors.chassis && touched.chassis ? <div className=\"invalid-feedback\">{errors.chassis}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n\n                                                <Col md=\"4\">\n                                                    <FormGroup>\n                                                        <Label for=\"engine\">Engine</Label>\n                                                        <Field name=\"engine\" id=\"engine\" value={formValues.engine} className={`form-control ${errors.engine && touched.engine && 'is-invalid'}`} />\n                                                        {errors.engine && touched.engine ? <div className=\"invalid-feedback\">{errors.engine}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n                                        </div>\n\n                                        <div className=\"form-actions\">\n                                            <Button color=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                                                <CheckSquare size={16} color=\"#FFF\" /> Save\n                                            </Button>\n                                            {   this.state.alert.display &&\n                                                <Alert color={this.state.alert.type} >\n                                                    {this.state.alert.message}\n                                                </Alert>\n                                            }\n\n\n                                        </div>\n                                    </Form>\n                                        )}\n                                    </Formik>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nexport default Create;\n","import React from \"react\";\n\nconst ContentHeader = props => {\n  const {className} = props;\n   return (\n      <div\n         className={`content-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentHeader;\n","const config = {\n    base_url: process.env.REACT_APP_API_URL\n}\n\nexport default config;"],"sourceRoot":""}