{"version":3,"sources":["views/passengers/create.js","components/contentHead/contentHeader.js","app/config.js"],"names":["formSchema","Yup","shape","name","max","required","father_name","cnic","nullable","gender","phone","email","full_address","latitude","longitude","Create","state","auth","store","getState","authentication","Auth","formValues","s_phone","s_email","formData","alert","display","type","message","createPassenger","_callee","requestOptions","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","_this","contact","address","full","city","method","headers","Content-Type","Authorization","concat","token","body","JSON","stringify","fetch","config","base_url","then","handleResponse","response","success","setState","error","stop","handleSubmit","e","handleChange","target","value","handleResetForm","document","getElementById","reset","text","parse","_this2","this","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react__WEBPACK_IMPORTED_MODULE_7__","_components_contentHead_contentHeader__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","md","className","formik__WEBPACK_IMPORTED_MODULE_14__","initialValues","validationSchema","onSubmit","data","_ref2","setSubmitting","resetForm","console","log","_ref3","values","isSubmitting","errors","touched","id","react_feather__WEBPACK_IMPORTED_MODULE_12__","size","color","for","onChange","defaultValue","disabled","selected","model","onClick","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","props","undefined","children","process"],"mappings":"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","file":"static/js/24.6dbfd410.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport config from \"../../app/config\";\nimport {store} from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport {Alert, Button, Card, CardBody, CardTitle, Col, FormGroup, Input, Label, Row} from \"reactstrap\";\nimport {CheckSquare, User, X, Phone, Home} from \"react-feather\";\nimport { useForm } from 'react-hook-form'\nimport {Field, Formik, Form} from \"formik\";\nimport * as Yup from \"yup\";\n\nconst formSchema = Yup.object().shape({\n    name: Yup.string().max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    father_name: Yup.string().max(50, \"Too long, max 50 characters\").required(\"Required\"),\n    cnic: Yup.number().required(\"Required\").nullable(),\n    gender: Yup.string().max(1, \"Something odd happened, can not process further\").required(\"Required\"),\n    phone: Yup.number().required(\"Required\"),\n    email: Yup.string().email().required(\"Required\"),\n    full_address: Yup.string().required(\"Required\").max(190, \"Address too long\"),\n    latitude: Yup.number().required(\"Required\").nullable(),\n    longitude: Yup.number().required(\"Required\").nullable(),\n});\n\nclass Create extends Component {\n\n    state = {\n        auth: store.getState().authentication.Auth,\n        formValues: {\n            name: '',\n            father_name: '',\n            cnic: null,\n            gender: 'M',\n            phone: null,\n            email: '',\n            s_phone: null,\n            s_email: null,\n            full_address: '',\n            latitude: 54.2211,\n            longitude: 54.2211\n        },\n        formData: {\n        },\n        alert: {\n            display: false,\n            type: \"success\",\n            message: \"\"\n        }\n    };\n\n    createPassenger = async () => {\n        let { formValues } = this.state;\n        formValues.contact = {\n            phone: formValues.phone,\n            email: formValues.email\n        };\n        formValues.address = {\n            full: formValues.full_address,\n            latitude: formValues.latitude,\n            longitude: formValues.longitude,\n            city: 1,\n            state: 1\n        };\n        const requestOptions = {\n            method: 'Post',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            },\n            body: JSON.stringify(formValues)\n        };\n        fetch(`${config.base_url}v1/passenger`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                    // this.handleResetForm();\n                }\n                else{\n                    const alert = {\n                        type: \"danger\",\n                        message: response.error.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                return response;\n            });\n    };\n\n    handleResponse(response) {\n        return response.text().then(text => {\n            return text && JSON.parse(text);\n        });\n    }\n\n    handleSubmit = e => {\n        this.createPassenger();\n    };\n\n    handleChange = e => {\n        const { formValues } = this.state;\n        formValues[e.target.name] = e.target.value;\n\n        this.setState({formValues})\n    };\n\n    handleResetForm = () => {\n        document.getElementById(\"form\").reset();\n    };\n\n    render() {\n        const {formData} = this.state;\n        return (\n            <Fragment>\n                <ContentHeader>Passenger Add </ContentHeader>\n\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardBody>\n                                <div className=\"px-3\">\n                                    <Formik\n                                        initialValues={this.state.formValues}\n                                        validationSchema={formSchema}\n                                        onSubmit={(data, {setSubmitting, resetForm}) => {\n                                            console.log(data);\n                                            setSubmitting(true);\n                                            this.setState({formValues: data});\n                                            this.handleSubmit();\n                                            setSubmitting(false);\n                                            resetForm();\n                                        }}\n                                    >\n                                        {({ values, isSubmitting, errors, touched, handleChange}) => (\n                                            <Form id=\"form\">\n                                        <div className=\"form-body\">\n                                            <h4 className=\"form-section\"><User size={20} color=\"#212529\" /> Passenger Info</h4>\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"name\">Passenger Name</Label>\n                                                        <Field name=\"name\" id=\"name\" className={`form-control ${errors.name && touched.name && 'is-invalid'}`}/>\n                                                        {errors.name && touched.name ? <div className=\"invalid-feedback\">{errors.name}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"father_name\">Passenger Father Name</Label>\n                                                        <Field name=\"father_name\" id=\"father_name\" className={`form-control ${errors.father_name && touched.father_name && 'is-invalid'}`}/>\n                                                        {errors.father_name && touched.father_name ? <div className=\"invalid-feedback\">{errors.father_name}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"cnic\">CNIC</Label>\n                                                        <Field id=\"cnic\"   name=\"cnic\" className={`form-control ${errors.cnic && touched.cnic && 'is-invalid'}`} />\n                                                        {errors.cnic && touched.cnic ? <div className=\"invalid-feedback\">{errors.cnic}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"model\">Gender</Label>\n                                                        <select onChange={handleChange} id=\"type\" name=\"type\" className={`form-control ${errors.type && touched.type && 'is-invalid'}`}>\n                                                            <option value=\"\" defaultValue=\"\" disabled=\"\">Select Gender</option>\n                                                            <option value=\"M\" selected={values.gender === 'M'}>Male</option>\n                                                            <option value=\"F\" selected={values.gender === 'F'}>Female</option>\n                                                        </select>\n                                                        {errors.model && touched.model ? <div className=\"invalid-feedback\">{errors.model}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n                                            <h4 className=\"form-section\"><Phone size={20} color=\"#212529\" /> Contact Info</h4>\n                                            <Row>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"phone\">Primary Phone</Label>\n                                                        <Field name=\"phone\" id=\"phone\" className={`form-control ${errors.phone && touched.phone && 'is-invalid'}`} />\n                                                        {errors.phone && touched.phone ? <div className=\"invalid-feedback\">{errors.phone}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\">\n                                                    <FormGroup>\n                                                        <Label for=\"email\">Primary Email</Label>\n                                                        <Field name=\"email\" id=\"email\" className={`form-control ${errors.email && touched.email && 'is-invalid'}`} />\n                                                        {errors.email && touched.email ? <div className=\"invalid-feedback\">{errors.email}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n                                            <h4 className=\"form-section\"><Home size={20} color=\"#212529\" /> Address Info</h4>\n\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <FormGroup>\n                                                        <Label for=\"full_address\">Address</Label>\n                                                        <Field name=\"full_address\" id=\"full_address\" className={`form-control ${errors.full_address && touched.full_address && 'is-invalid'}`} />\n                                                        {errors.full_address && touched.full_address ? <div className=\"invalid-feedback\">{errors.full_address}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n\n\n                                        </div>\n\n                                        <div className=\"form-actions\">\n                                            <Button color=\"warning\" className=\"mr-1\" onClick={this.handleResetForm}>\n                                                <X size={16} color=\"#FFF\" /> Cancel\n                                            </Button>\n                                            <Button color=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                                                <CheckSquare size={16} color=\"#FFF\" /> Save\n                                            </Button>\n\n\n                                        </div>\n                                                {   this.state.alert.display &&\n                                                <Alert color={this.state.alert.type} >\n                                                    {this.state.alert.message}\n                                                </Alert>\n                                                }\n                                            </Form>\n                                        )}\n                                    </Formik>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nexport default Create;\n","import React from \"react\";\n\nconst ContentHeader = props => {\n  const {className} = props;\n   return (\n      <div\n         className={`content-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentHeader;\n","const config = {\n    base_url: process.env.REACT_APP_API_URL\n}\n\nexport default config;"],"sourceRoot":""}