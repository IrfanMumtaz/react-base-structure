{"version":3,"sources":["views/access-control-list/edit.js","components/contentHead/contentHeader.js","app/config.js"],"names":["formSchema","Yup","shape","name","required","max","Edit","_this","Object","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","getPermissions","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_imirfanmumtaz_www_react_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","requestOptions","wrap","_context","prev","next","state","permissions","method","headers","Content-Type","Authorization","concat","auth","token","fetch","config","base_url","then","handleResponse","response","success","message","data","statePermission","map","permission","push","value","id","label","setState","stop","getRole","_callee2","_context2","props","match","params","formValues","role","multivalues","alert","type","error","display","updateRole","_callee3","_this$state","_context3","val","body","JSON","stringify","handleSubmit","e","handleMultiChange","option","handleResetForm","document","getElementById","reset","store","getState","authentication","Auth","text","parse","find","p","addPermission","indexOf","_this2","_this$state2","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react__WEBPACK_IMPORTED_MODULE_7__","_components_contentHead_contentHeader__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","md","className","formik__WEBPACK_IMPORTED_MODULE_13__","initialValues","enableReinitialize","validationSchema","onSubmit","_ref4","setSubmitting","_ref5","values","errors","isSubmitting","touched","handleChange","react_feather__WEBPACK_IMPORTED_MODULE_12__","size","color","for","react_select__WEBPACK_IMPORTED_MODULE_15__","options","onChange","isMulti","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","undefined","children","process"],"mappings":"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","file":"static/js/14.37c308e1.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport config from \"../../app/config\";\nimport {store} from \"../../redux/storeConfig/store\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport {Alert, Button, Card, CardBody, CardTitle, Col, FormGroup, Input, Label, Row} from \"reactstrap\";\nimport {CheckSquare, FileText, Info, Mail, X, Map} from \"react-feather\";\nimport {Field, Formik, Form} from \"formik\";\nimport * as Yup from \"yup\";\nimport Select from 'react-select';\nimport \"react-select/dist/react-select\";\n\nconst formSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required\").max(50, \"Role name is too long.\")\n});\n\nclass Edit extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            auth: store.getState().authentication.Auth,\n            formValues: {\n                name: '',\n                permissions: []\n            },\n            multivalues: [\n            ],\n            permissions: [],\n            alert: {\n                display: false,\n                type: \"success\",\n                message: \"\"\n            }\n        };\n    }\n\n\n\n\n    componentWillMount() {\n        this.getRole();\n        this.getPermissions();\n    }\n\n    getPermissions = async () => {\n        const { permissions } = this.state;\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            }\n        };\n        fetch(`${config.base_url}v1/acl/permission`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    const {permissions} = response.data;\n                    let statePermission = [];\n                    permissions.map( permission => (\n                        statePermission.push({\n                            value: permission.id,\n                            label: permission.name\n                        })\n                    ));\n                    this.setState({permissions: statePermission });\n                }\n                return response;\n            });\n    };\n\n    getRole = async () => {\n        const { id } = this.props.match.params;\n        const { formValues } = this.state;\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            }\n        };\n        fetch(`${config.base_url}v1/acl/role/${id}`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    let formValues = response.data.role;\n                    this.setState({formValues });\n                    let multivalues = [];\n                    formValues.permissions.map(permission => {\n                        const value = {value: permission.id, label: permission.name};\n                        multivalues.push(value);\n                    });\n                    this.setState({multivalues});\n                }\n                else{\n                    const alert = {\n                        type: \"danger\",\n                        message: response.error.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                return response;\n            });\n    };\n\n    updateRole = async () => {\n        const { id } = this.props.match.params;\n        let { formValues, multivalues } = this.state;\n        formValues.permissions = [];\n        multivalues.map(val => {\n            formValues.permissions.push(val.value);\n        });\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${this.state.auth.token}`\n            },\n            body: JSON.stringify(formValues)\n        };\n        fetch(`${config.base_url}v1/acl/role/${id}`, requestOptions)\n            .then(this.handleResponse)\n            .then(response => {\n                if(response.success === true){\n                    const alert = {\n                        type: \"success\",\n                        message: response.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                else{\n                    const alert = {\n                        type: \"danger\",\n                        message: response.error.message,\n                        display: true\n                    };\n                    this.setState({alert});\n                }\n                return response;\n            });\n    };\n\n    handleResponse(response) {\n        return response.text().then(text => {\n            return text && JSON.parse(text);\n        });\n    }\n\n    handleSubmit = e => {\n        this.updateRole();\n    };\n\n    handleMultiChange = option => {\n        this.setState({multivalues: option});\n    };\n\n    handleResetForm = () => {\n        document.getElementById(\"vehicleForm\").reset();\n    };\n\n    findPermission(id){\n        let {formValues} = this.state;\n        let obj = formValues.permissions.find(p => p.id === id);\n        if(obj) {\n            if(formValues.addPermission.indexOf(id === -1)){\n                formValues.addPermission.push(id);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n        const {permissions, formValues} = this.state;\n        return (\n            <Fragment>\n                <ContentHeader>Vehicles Update </ContentHeader>\n\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardBody>\n                                <div className=\"px-3\">\n                                    <Formik\n                                        initialValues={this.state.formValues}\n                                        enableReinitialize={true}\n                                        validationSchema={formSchema}\n                                        onSubmit={(data, {setSubmitting}) => {\n                                            setSubmitting(true);\n                                            this.setState({formValues: data});\n                                            this.handleSubmit();\n                                            setSubmitting(false);\n                                        }}\n                                    >\n                                        {({ values, isSubmitting, errors, touched, handleChange}) => (\n                                    <Form id=\"vehicleForm\">\n                                        <div className=\"form-body\">\n                                            <h4 className=\"form-section\"><Map size={20} color=\"#212529\" /> Role Info</h4>\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <FormGroup>\n                                                        <Label for=\"name\">Role Name</Label>\n                                                        <Field name=\"name\" id=\"name\" value={values.name} className={`form-control ${errors.name && touched.name && 'is-invalid'}`}/>\n                                                        {errors.name && touched.name ? <div className=\"invalid-feedback\">{errors.name}</div> : null}\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <Select\n                                                        options = {permissions}\n                                                        value={this.state.multivalues}\n                                                        onChange={this.handleMultiChange}\n                                                        isMulti={true}  />\n                                                </Col>\n                                            </Row>\n\n                                        </div>\n\n                                        <div className=\"form-actions\">\n                                            <Button color=\"primary\" type=\"submit\">\n                                                <CheckSquare size={16} color=\"#FFF\" /> Save\n                                            </Button>\n                                            {   this.state.alert.display &&\n                                                <Alert color={this.state.alert.type} >\n                                                    {this.state.alert.message}\n                                                </Alert>\n                                            }\n\n\n                                        </div>\n                                    </Form>\n\n                                    )}\n                                    </Formik>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nexport default Edit;\n","import React from \"react\";\n\nconst ContentHeader = props => {\n  const {className} = props;\n   return (\n      <div\n         className={`content-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentHeader;\n","const config = {\n    base_url: process.env.REACT_APP_API_URL\n}\n\nexport default config;"],"sourceRoot":""}