{"version":3,"sources":["redux/helpers/history.js","views/pages/login.js"],"names":["createBrowserHistory","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","handleSubmit","preventDefault","submitted","_this$state","state","inputEmail","inputPass","requestOptions","method","headers","Content-Type","Client-ID","process","Client-Secret","Accept","body","JSON","stringify","username","password","fetch","concat","then","handleResponse","response","console","log","success","localStorage","setItem","btoa","data","authentication","access_token","user","permissions","window","location","reload","alert","type","message","error","display","handleResetForm","document","getElementById","reset","store","getState","loggedIn","text","parse","isLoggedIn","react_default","a","createElement","Redirect","to","className","reactstrap_es","xs","onSubmit","id","md","placeholder","required","onChange","color","block","onClick","Component"],"mappings":"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","file":"static/js/7.77542b95.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","// import external modules\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport {\n   Row,\n   Col,\n   Input,\n   Form,\n   FormGroup,\n   Button,\n   Card,\n   CardBody, Alert,\n} from \"reactstrap\";\nimport { loginAction } from \"../../redux/actions\";\nimport { store } from \"../../redux/storeConfig/store\";\nimport {Redirect} from \"react-router-dom\";\n\n\nclass Login extends Component {\n   constructor(props) {\n      super(props);\n\n      // reset login status\n      // this.props.logout();\n\n      this.state = {\n         inputEmail: '',\n         inputPass: '',\n         submitted: false,\n         alert: {\n            display: false,\n            type: \"success\",\n            message: \"\"\n         }\n      };\n\n      console.log(this.state);\n\n   }\n\n   isLoggedIn(){\n      const {Login} = store.getState().authentication;\n      return Login.loggedIn;\n   }\n\n   handleChange = e => {\n      this.setState({\n         [e.target.name]: e.target.value\n      });\n   };\n\n   handleSubmit = e => {\n      e.preventDefault();\n      this.setState({ submitted: true });\n      const { inputEmail, inputPass } = this.state;\n      if (inputEmail && inputPass) {\n\n         const requestOptions = {\n            method: 'Post',\n            headers: {\n               'Content-Type': 'application/json',\n               'Client-ID': process.env.REACT_APP_API_CLIENT,\n               'Client-Secret': process.env.REACT_APP_API_SECRET,\n               'Accept': '*/*'\n            },\n            body: JSON.stringify({username: inputEmail, password: inputPass})\n         };\n\n         fetch(`${process.env.REACT_APP_API_URL}v1/auth/get-access-token`, requestOptions)\n             .then(this.handleResponse)\n             .then(response => {\n                console.log(response);\n                if(response.success === true){\n                   localStorage.setItem('access_token', btoa(response.data.authentication.access_token));\n                   localStorage.setItem('user', btoa(JSON.stringify(response.data.authentication.user)));\n                   localStorage.setItem('acl', btoa(JSON.stringify(response.data.authentication.permissions)));\n                   window.location.reload();\n                }\n                else{\n                   const alert = {\n                      type: \"danger\",\n                      message: response.error.message,\n                      display: true\n                   };\n                   this.setState({alert});\n                }\n                return response;\n             });\n      }\n   };\n\n   handleResponse(response) {\n      return response.text().then(text => {\n         return text && JSON.parse(text);\n      });\n   }\n\n   handleResetForm = () => {\n      this.setState({\n         inputEmail: '',\n         inputPass: ''\n      });\n      document.getElementById(\"loginForm\").reset();\n\n   };\n\n   render() {\n      if (this.isLoggedIn() === true) {\n         return <Redirect to='/' />\n      }\n      return (\n         <div className=\"container\">\n            <Row className=\"full-height-vh\">\n               <Col xs=\"12\" className=\"d-flex align-items-center justify-content-center\">\n                  <Card className=\"gradient-indigo-purple text-center width-400\">\n                     <CardBody>\n                        <h2 className=\"white py-4\">Login</h2>\n                        <Form className=\"pt-2\" onSubmit={this.handleSubmit} id={\"loginForm\"}>\n                           <FormGroup>\n                              <Col md=\"12\">\n                                 <Input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    name=\"inputEmail\"\n                                    id=\"inputEmail\"\n                                    placeholder=\"Email\"\n                                    required\n                                    onChange={this.handleChange}\n                                 />\n                              </Col>\n                           </FormGroup>\n\n                           <FormGroup>\n                              <Col md=\"12\">\n                                 <Input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"inputPass\"\n                                    id=\"inputPass\"\n                                    placeholder=\"Password\"\n                                    required\n                                    onChange={this.handleChange}\n                                 />\n                              </Col>\n                           </FormGroup>\n\n                           <FormGroup>\n                              <Col md=\"12\">\n                                 <Button type=\"submit\" color=\"danger\" block className=\"btn-pink btn-raised\">\n                                    Submit\n                                 </Button>\n                                 <Button type=\"button\" color=\"secondary\" block className=\"btn-raised\" onClick={this.handleResetForm}>\n                                    Cancel\n                                 </Button>\n                                 {   this.state.alert.display &&\n                                 <Alert color={this.state.alert.type} >\n                                    {this.state.alert.message}\n                                 </Alert>\n                                 }\n                              </Col>\n                           </FormGroup>\n                        </Form>\n                     </CardBody>\n                  </Card>\n               </Col>\n            </Row>\n         </div>\n      );\n   }\n}\n\nexport default Login;\n"],"sourceRoot":""}